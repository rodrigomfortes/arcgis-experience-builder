define(["esri/geometry/SpatialReference","esri/geometry/support/geodesicUtils","esri/geometry/support/webMercatorUtils","esri/geometry/geometryEngine","esri/geometry/operators/intersectsOperator","esri/geometry/operators/distanceOperator","esri/geometry/operators/geodesicProximityOperator","esri/geometry/support/jsonUtils","esri/geometry/Geometry","esri/geometry/Polygon","esri/geometry/Polyline","esri/geometry/Point"],((e,t,o,r,n,s,i,a,p,c,l,g)=>({getDistance:async({selectedGeometryJson:r,intersectedGeometryJsonArray:p,distanceUnit:y})=>{i.isLoaded()||await i.load();const f=(e,t)=>{const o=i.getNearestCoordinate(e,t).coordinate;return N(t,o)},d=(e,t)=>{let o,r;const n=e,s=n.points;for(let i=0;i<n.points.length;i++){const n=new g({x:s[i][0],y:s[i][1],spatialReference:e.spatialReference.toJSON()});o=v(n,t),(void 0===r||o<r)&&(r=o)}return r},h=(e,t)=>{let o,r;const n=e,s=n.points;for(let i=0;i<n.points.length;i++){const n=new g({x:s[i][0],y:s[i][1],spatialReference:e.spatialReference.toJSON()});o=w(n,t),(void 0===r||o<r)&&(r=o)}return r},u=(e,t)=>{let o,r;const s=e,i=t;if(n.execute(s,i))return 0;let a,p;for(a=0;a<s.rings.length;a++)for(p=0;p<s.rings[a].length;p++){const e=s.getPoint(a,p);o=v(e,i),(void 0===r||o<r)&&(r=o)}for(a=0;a<i.rings.length;a++)for(p=0;p<i.rings[a].length;p++){const e=i.getPoint(a,p);o=v(e,s),(void 0===r||o<r)&&(r=o)}return r},m=(e,t)=>{let o,r;const s=e,i=t;let a,p;if(n.execute(s,i))return 0;for(a=0;a<s.paths.length;a++)for(p=0;p<s.paths[a].length;p++){const e=s.getPoint(a,p);o=v(e,i),(void 0===r||o<r)&&(r=o)}for(a=0;a<i.rings.length;a++)for(p=0;p<i.rings[a].length;p++){const e=i.getPoint(a,p);o=w(e,s),(void 0===r||o<r)&&(r=o)}return r},P=(e,t)=>{let o,r,s,i;const a=e,p=t;if(n.execute(a,p))return 0;for(o=0;o<a.paths.length;o++)for(r=0;r<a.paths[o].length;r++){const e=a.getPoint(o,r);s=w(e,p),(void 0===i||s<i)&&(i=s)}for(o=0;o<p.paths.length;o++)for(r=0;r<p.paths[o].length;r++){const e=p.getPoint(o,r);s=w(e,a),(void 0===i||s<i)&&(i=s)}return i},v=(e,t)=>{let o,r;const n=e,s=t;return s?.rings?.length>0&&s.rings.forEach((e=>{const t={rings:[e],spatialReference:s.spatialReference},a=new c(t),p=i.getNearestCoordinate(a,n).coordinate;o=N(n,p),(void 0===r||o<r)&&(r=o)})),r},w=(e,t)=>{let o,r;const n=e,s=t;return s.paths?.length>0&&s.paths.forEach((e=>{const t={paths:[e],spatialReference:s.spatialReference},a=new l(t),p=i.getNearestCoordinate(a,n).coordinate;o=N(n,p),(void 0===r||o<r)&&(r=o)})),r},N=(e,o)=>{const r=t.geodesicDistance(e,o,"meters");return isNaN(r.distance)?-1:r.distance},R=(e,t)=>{const o="meters";return o===t?+e:+e/x(o)*x(t)},x=e=>{let t=1;switch(e){case"meters":t=1;break;case"kilometers":t=.001;break;case"feet":t=1/.3048;break;case"yards":t=1/.9144;break;case"miles":t=1/1609.344}return t},O=new e({wkid:4326}),k=[];for(let e=0;e<p.length;e++){let t=a.fromJSON(r),i=a.fromJSON(p[e]),c=-1;t&&i&&!n.execute(t,i)?o.canProject(t,O)&&o.canProject(i,O)?(t=o.project(t,O),i=o.project(i,O),"multipoint"===t.type?"point"===i.type?c=f(t,i):"polyline"===i.type?c=h(t,i):"polygon"===i.type&&(c=d(t,i)):"point"===t.type?"point"===i.type?c=N(t,i):"polyline"===i.type?c=w(t,i):"polygon"===i.type&&(c=v(t,i)):"polyline"===t.type?"point"===i.type?c=w(i,t):"polyline"===i.type?c=P(t,i):"polygon"===i.type&&(c=m(t,i)):"polygon"===t.type&&("point"===i.type?c=v(i,t):"polyline"===i.type?c=m(i,t):"polygon"===i.type&&(c=u(t,i))),y&&(c=R(c,y))):c=s.execute(t,i,{unit:y}):c=0,k.push(c)}return k}})));