System.register(["jimu-arcgis"],(function(e,i){var t={};return{setters:[function(e){t.mapViewUtils=e.mapViewUtils}],execute:function(){e((()=>{var e={62686:e=>{"use strict";e.exports=t}},i={};function r(t){var s=i[t];if(void 0!==s)return s.exports;var o=i[t]={exports:{}};return e[t](o,o.exports,r),o.exports}r.d=(e,i)=>{for(var t in i)r.o(i,t)&&!r.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:i[t]})},r.o=(e,i)=>Object.prototype.hasOwnProperty.call(e,i),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.p="";var s={};return r.p=window.jimuConfig.baseUrl,(()=>{"use strict";r.r(s),r.d(s,{default:()=>i});var e=r(62686);class i{constructor(){this.id="swipe-app-config-operation"}afterWidgetCopied(i,t,r,s,o){if(!o)return s;let a=s;const p=t.widgets[i],n=null==p?void 0:p.config,l={};for(const i of Object.keys(n.swipeMapViewList||{})){const t=e.mapViewUtils.getCopiedJimuMapViewId(o,i),r=n.swipeMapViewList[i].leadingLayersId.map((i=>e.mapViewUtils.getCopiedJimuLayerViewId(o,i))).asMutable(),s=n.swipeMapViewList[i].trailingLayersId.map((i=>e.mapViewUtils.getCopiedJimuLayerViewId(o,i))).asMutable();l[t]={leadingLayersId:r,trailingLayersId:s}}const d={};for(const i of Object.keys(n.scrollMapViewList||{})){const t=e.mapViewUtils.getCopiedJimuMapViewId(o,i),r=n.scrollMapViewList[i].map((i=>e.mapViewUtils.getCopiedJimuLayerViewId(o,i))).asMutable();d[t]=r}return a=a.setIn(["widgets",r,"config","swipeMapViewList"],l).setIn(["widgets",r,"config","scrollMapViewList"],d),a}}})(),s})())}}}));