/*! For license information please see arcgis_analysis_node_modules_arcgis_map-config-components_dist_esm-1b9f13.js.LICENSE.txt */
"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_map-config-components_dist_esm-1b9f13"],{14143:(e,t,n)=>{n.d(t,{a:()=>C,b:()=>w,c:()=>T,d:()=>b,e:()=>v,f:()=>E,g:()=>g,h:()=>y,u:()=>s});var r=n(17840),o=n(20057),a=n(76744);n(56612);async function s(e,t){const{layer:n,portal:s,strings:l,modules:u}=e,c=n,d=document.createElement("arcgis-map-config-modal-arcade");if(d.arcadeScript=t?.expression||"",d.arcadeProfile=function(e){const{layer:t,useFeatureReduction:n}=e;return{id:"visualization",definitions:{$feature:n?{fields:(0,r.j)(t.featureReduction.popupTemplate,!1)}:t}}}(e),d.testData=await async function(e){const{layer:t,mapView:n,useFeatureReduction:o}=e;return{profileVariableInstances:{$feature:o?await(0,r.k)(n,t,t.featureReduction.popupTemplate):await i(e),$view:{scale:n.scale,timeProperties:n.timeExtent?{currentStart:n.timeExtent.start,currentEnd:n.timeExtent.end,startIncluded:!0,endIncluded:!0}:void 0}},spatialReference:n.spatialReference}}(e),d.addExistingExpressions=!0,d.layer=c,d.portal=s,d.arcadeTitle=t?.expressionTitle||l.arcade.newExpression,d.arcadeTitleEditable=!0,d.arcadeTitleEditingEnabled=!t?.expressionTitle,document.URL.includes("/mapviewer/")){const e=[{label:l.arcade.timeSeries,description:l.arcade.timeSeriesDescription,code:(0,o.g)({resultFormatPattern:""})}];d.suggestions=[{label:l.arcade.suggestions,suggestions:e}]}return document.body.appendChild(d),await new Promise(((t,n)=>{d.addEventListener("arcgisClose",(async r=>{if(document.body.removeChild(d),!r.detail)return void n(new Error);const{script:o,title:s,predictOutputType:i}=r.detail;o?.trim().length?await u.fieldUtils.getExpressionFields(c,[o]).then((n=>{(0,a.av)(e,n),t({expression:o,expressionTitle:s,simpleFieldType:o.includes("timeProperties")?a.w.UNKNOWN:"number"===i?a.w.NUMBER:"string"===i?a.w.STRING:"date"===i?a.w.NUMBER:a.w.UNKNOWN})})):n(new Error)}))}))}async function i(e){const{layer:t,mapView:n,modules:r}=e;let o;if(!("fields"in t))return null;{await async function(e){const{oneFeatureResponse:t,oneFeatureResponseStatus:n}=e;if(t&&n!==a.s.MISSING)return e.oneFeatureResponse;{const t=await async function(e){const{mapView:t,layer:n,mapImageSublayer:r}=e;if(!("fields"in n))throw new Error("getOneFeature: wrong layer type");if(r)return await l(e);const o="subtype-sublayer"===n.type?n.parent:n;return await t.whenLayerView(o).then((async t=>{const r=t;if("feature"===n.type&&!n.url||"wfs"===n.type){const t=n.createQuery();return t.start=0,t.num=5,t.outFields=["*"],await n.queryFeatures(t).then((async t=>t.features?.length?t:u(e)))}{const t="hasM"in n&&n.hasM,o="hasZ"in n&&n.hasZ,a=r.availableFields.length===n.fields?.length&&!t&&!o;if("createQuery"in n&&a){const t=n.createQuery();return t.start=0,t.num=5,t.outFields=["*"],await r.queryFeatures(t).then((async t=>t.features?.length?t:await l(e)))}return await l(e)}}))}(e);return e.oneFeatureResponse=t?.features.length&&t,e.oneFeatureResponseStatus=t?.features.length?a.s.SUCCESS:a.s.FAILED,t}}(e);const{oneFeatureResponse:s}=e;if(s?.features?.length)o=r.esriLang.clone(s.features[0]);else{const s={};t.fields?.forEach((e=>{["small-integer","big-integer","integer","single","double","string","date","date-only","oid","guid"].includes(e.type)&&!1===e.nullable?e.defaultValue?s[e.name]=e.defaultValue:"string"===e.type?s[e.name]="":s[e.name]=0:s[e.name]=null}));const i=n.extent;let l,u;(0,a.e)(e)?(l=new r.Polygon({spatialReference:new r.SpatialReference(n.spatialReference.toJSON())}),l.addRing([[i.xmin,i.ymin],[i.xmax,i.ymin],[i.xmax,i.ymax],[i.xmin,i.ymax],[i.xmin,i.ymin]]),u=new r.SimpleLineSymbol):(0,a.G)(e)?(l=new r.Point(i.center.toJSON()),u=new r.SimpleMarkerSymbol):(0,a.H)(e)&&(l=new r.Polyline({spatialReference:new r.SpatialReference(n.spatialReference.toJSON())}),l.addPath([[i.xmin,i.ymin],[i.xmax,i.ymax]]),u=new r.SimpleFillSymbol),o=new r.Graphic({geometry:l,symbol:u,attributes:s})}}return o}async function l(e){const{layer:t,mapView:n,modules:r}=e;if(!("queryFeatures"in t))return u(e);const o=new r.Query({outFields:["*"],where:"1=1",outSpatialReference:n.spatialReference,returnGeometry:!0,returnM:"hasM"in t&&t.hasM,returnZ:"hasZ"in t&&t.hasZ});return"sourceJSON"in t&&t.sourceJSON?.advancedQueryCapabilities?.supportsPagination&&(o.num=1),await t.queryFeatures(o).catch(u)}function u(e){const{layer:t,modules:n}=e,r={};"fields"in t&&t.fields?.forEach((e=>{e.defaultValue?r[e.name]=e.defaultValue:["small-integer","big-integer","integer","single","double","long","date","oid"].includes(e.type)?r[e.name]=0:"date-only"===e.type?r[e.name]=null:r[e.name]=""}));const o=new n.Graphic({geometry:void 0,symbol:void 0,attributes:r});return new n.FeatureSet({features:[o],fields:[],geometryType:(0,a.I)(e),spatialReference:"spatialReference"in t?t.spatialReference.clone():void 0})}let c;const d="polygon";function f(e){const{modules:t}=e,n=t.EsriColor;return[new n("#ff4040"),new n("#ff8200"),new n("#faa83f"),new n("#ffd159"),new n("#74b566"),new n("#008977"),new n("#33e3c8"),new n("#43abeb"),new n("#4c64c9"),new n("#9868ed"),new n("#b155e6"),new n("#db5181"),new n("#e03b99"),new n("#2b2b2b"),new n("#bdbdbd"),new n("#ffffff")]}async function m(e,t){const n=document.createElement("arcgis-map-config-symbol-styler");return n.initialSourceId=c,n.config=e.symbolStylerConfig,n.popoverProps={placement:"bottom-end",offsetDistance:10,offsetSkidding:e.isRTL?3:-3,pointerDisabled:"true",popoverWidth:315,refElement:await t.getPopoverCloseActionElement()},n.addEventListener("arcgisSourceIdChange",(({detail:e})=>c=e)),n}function p(e,t,n){return document.URL.includes("debug=true")&&(console.log("symbol",JSON.stringify(t,null,2)),console.log("props",JSON.stringify({...n,portal:"..."}))),e.edit(t,n)}function h(e,t){const{symbol:n,info:{marker:r,stroke:o,fill:a}}=t.detail;document.URL.includes("debug=true")&&(console.log("onStylerEdit - symbol:",JSON.stringify(n?.toJSON(),null,2)),console.log("onStylerEdit - info.marker:",JSON.stringify(r)),console.log("onStylerEdit - info.stroke:",JSON.stringify(o)),console.log("onStylerEdit - info.fill:",JSON.stringify(a))),e(t)}async function y(e,t){const{mapView:n,modules:r,portal:o,strings:s}=e,i=(0,a.m)(e),{onChange:l,popoverNode:u}=t,c=(0,a.b)(i,"color"),y=await m(e,u);let g,E;if(c){const t=c.stops.map((e=>e.color)),i=r.colorSchemes.getSchemes({basemapTheme:await r.colorUtils.getBackgroundColorTheme(n),geometryType:d,theme:"high-to-low"});let u=(0,a.ae)(i,0);u=u.filter((e=>e.colors?.length===c.stops.length));const f=u.map((e=>({stops:e.colors.reverse(),tags:e.scheme.tags,name:e.scheme.name})));g=({detail:t})=>{const n=(0,a.m)(e);(0,a.b)(n,"color").stops.reverse().forEach(((e,n)=>{e.color=t.info.fill.color[n]})),l()},E=p(y,(0,a.f)(e),{portal:o,sections:{marker:{parts:{preview:!1,rotation:!1,size:!1}},fill:{type:"color-ramp",style:"continuous",open:!0,colorRamps:f}},fill:{color:t.reverse()}}),y.stringOverrides={fillColor:s.styler.color,fillTransparency:s.styler.transparency}}else{const t=f(e);g=({detail:t})=>{(0,a.m)(e).color=t.symbol.color,l()},E=p(y,(0,a.f)(e),{portal:o,sections:{marker:{parts:{preview:!1,rotation:!1,size:!1}},fill:{type:"color",optional:!1,open:!0,suggestedColorsOpen:!0,transparencyOpen:!0,suggestedColors:t}},fill:{color:i.color||t[1]},fillEnabled:!0}),y.stringOverrides={fillColor:s.styler.color,fillTransparency:s.styler.transparency}}y.addEventListener("arcgisEdit",h.bind(null,g)),u.addStyler(y),await E}async function g(e,t){const{modules:n,strings:r}=e,o=(0,a.m)(e),{onChange:s,popoverNode:i}=t,l=await m(e,i);t.defaultColors=o.colorRamp?P(o.colorRamp).map((e=>new n.EsriColor(e))):null;const u=l.edit(new n.SimpleMarkerSymbol,S(e,t));l.stringOverrides={fillColor:r.styler.color};l.addEventListener("arcgisFillChange",(({detail:t})=>{const r=n.esriLang.clone(t.color);(0,a.m)(e).colorRamp=T(e,r.reverse()),s()})),i.addStyler(l),await u}async function E(e,t){const{modules:n,strings:r}=e,o=(0,a.m)(e),{onChange:s,popoverNode:i}=t,l=await m(e,i);t.defaultColors=o.colorRamp?P(o.colorRamp).map((e=>new n.EsriColor(e))):null;const u=l.edit(new n.SimpleMarkerSymbol,S(e,t));l.stringOverrides={fillColor:r.styler.color};l.addEventListener("arcgisFillChange",(({detail:t})=>{const r=n.esriLang.clone(t.color);(0,a.m)(e).colorRamp=T(e,r.reverse()),s()})),i.addStyler(l),await u}async function w(e,t){const{classedSymbolSelectedIdx:n,portal:r,modules:o,strings:s}=e,i=(0,a.m)(e),{onChange:l,popoverNode:u}=t,c=(0,a.n)(e),d=i.classBreakInfos?.length?o.esriLang.clone(i.classBreakInfos[n].symbol):(0,a.f)(e,c),y="picture-marker"!==d.type&&!!d.color,g=(0,a.ah)(d),E=f(e);let w;if("simple-fill"===d.type){const e=d;e.outline&&(w={color:e.outline.color||new o.EsriColor([0,0,0,.5]),size:e.outline.width,style:e.outline.style})}const v=await m(e,u),P=p(v,o.esriLang.clone(d),{portal:r,sections:{marker:{parts:{preview:!1,rotation:!1,size:!1}},fill:{type:"color",open:!0,optional:!0,suggestedColorsOpen:!0,transparencyOpen:(0,a.aj)(e,d),suggestedColors:E,parts:{transparency:!1}}},fill:{color:(0,a.h)(e,d)},stroke:w,fillEnabled:y,strokeEnabled:g});v.stringOverrides={fillColor:s.styler.color,fillTransparency:s.styler.transparency},v.addEventListener("arcgisEdit",h.bind(null,(({detail:{symbol:t}})=>{t.outline&&(t.outline.width=0);const r=(0,a.m)(e),o=r.classBreakInfos.slice();o[n].symbol=t,r.classBreakInfos=o,l()}))),u.addStyler(v),await P}async function v(e,t){const{modules:n,strings:r}=e,o=(0,a.m)(e),{onChange:s,popoverNode:i}=t;let l=N(e,o.authoringInfo.colorRamp,o.classBreakInfos.length).map((e=>new n.EsriColor(e.slice(1))));o.classBreakInfos&&(l=o.classBreakInfos.map((e=>e.symbol.color)));const u=await m(e,i);t.defaultColors=(o.authoringInfo?.colorRamp?l:[[0,0,255],[0,255,255],[255,255,0],[255,0,0]]).map((e=>new n.EsriColor(e))),F(e,t.defaultColors);const c=u.edit(new n.SimpleMarkerSymbol,S(e,t));u.stringOverrides={fillColor:r.styler.color,fillTransparency:r.styler.transparency};u.addEventListener("arcgisFillChange",(({detail:t})=>{const r=n.esriLang.clone(t.color),o=(0,a.m)(e),i=n.esriLang.clone(r).reverse();o.classBreakInfos.map(((e,t)=>e.symbol.color=new n.EsriColor(i[t])));const l=function(e,t){const{modules:n}=e,r=(0,a.m)(e),o=R(e),s=n.esriLang.clone(o);s.forEach((t=>{t.stops=N(e,T(e,t.stops),r.classBreakInfos.length).map((e=>new n.EsriColor(e.slice(1)))).reverse()}));const i=s.filter((e=>{const r=JSON.stringify(e.stops)===JSON.stringify(t),o=JSON.stringify(n.esriLang.clone(e.stops).reverse())===JSON.stringify(t);return r||o}));if(i.length){const t=o.filter((e=>e.name===i[0].name));return T(e,t[0]?.stops)}return null}(e,r);l&&(o.authoringInfo.colorRamp=l),s()})),i.addStyler(u),await c}function P(e){if("multipart"===e?.type){const t=e.colorRamps,n=t.map((e=>e.fromColor));return n.push(t[t.length-1].toColor),n}return[e.fromColor,e.toColor]}async function b(e,t){const{mapView:n,modules:r}=e,o=(0,a.m)(e),{onChange:s,popoverNode:i}=t,l=o.uniqueValueInfos,u=await m(e,i),c=r.typeSchemes.getSchemes({basemap:n.map?.basemap??"topo",geometryType:(0,a.I)(e)||d}),f=[],p=(0,a.ae)(c,Math.min(l.length,10)),h=p[0].colors;f.push(...l?.length?o.uniqueValueInfos.map(((t,n)=>(0,a.h)(e,t.symbol)||new r.EsriColor(h[n%h.length]))):[]);const y=p.map((e=>({stops:e.colors,tags:e.scheme.tags,name:e.scheme.name})));if(!o.authoringInfo?.colorRamp&&f||!function(e,t){const{modules:n}=e,r=n.rasterColorRampUtils.getColorRampName(t);return!!r}(e,o.authoringInfo?.colorRamp)&&!function(e,t){if(!t?.colorRamps)return!1;const{mapView:n,modules:r}=e,o=(0,a.m)(e),s=o.uniqueValueInfos,i=r.typeSchemes.getSchemes({basemap:n.map?.basemap??"topo",geometryType:(0,a.I)(e)||d}),l=(0,a.ae)(i,Math.min(s.length,10)),u=l.filter((e=>e.colors.length===t.colorRamps.length+1)),c=[];c.push(t.colorRamps[0].fromColor),t.colorRamps.forEach((e=>{c.push(e.toColor)}));const f=u.filter((e=>{const t=JSON.stringify(e.colors)===JSON.stringify(c),n=JSON.stringify(r.esriLang.clone(e.colors).reverse())===JSON.stringify(c);return t||n}));return f.length>0}(e,o.authoringInfo?.colorRamp))t.defaultColors=f.reverse()||null;else{const n=N(e,o.authoringInfo?.colorRamp,o.uniqueValueInfos.length).map((e=>e.slice(1)));JSON.stringify(n)!==JSON.stringify(f)&&(t.defaultColors=f.reverse()||null)}t.extraColorRamps=y,t.defaultColors||(t.defaultColors=o.authoringInfo?.colorRamp?P(o.authoringInfo.colorRamp).reverse().map((e=>new r.EsriColor(e))):f.reverse()||null),F(e,t.defaultColors);const g=u.edit(new r.SimpleMarkerSymbol,S(e,t));u.stringOverrides={fillColor:""};u.addEventListener("arcgisFillChange",(({detail:t})=>{const n=r.esriLang.clone(t.color),o=T(e,n),i=(0,a.m)(e),l=i.authoringInfo||{};l.colorRamp=o,i.authoringInfo=l;const u=N(e,o,i.uniqueValueInfos.length).map((e=>e.slice(1))),c=[];i.uniqueValueInfos.forEach(((t,n)=>{t=t.clone(),c.push(t),(0,a.j)(e,t.symbol,new r.EsriColor(u[n]))})),i.uniqueValueInfos=c,s()})),i.addStyler(u),await g}async function C(e,t){const{mapView:n,selectedValue:r,lastDefault:o,portal:s,modules:i}=e,l=(0,a.m)(e),u=(0,a.n)(e),{onChange:c,popoverNode:d}=t,f=(0,a.e)(e);let y=-1===r?l.defaultSymbol||o.defaultSymbol:l.uniqueValueInfos[r].symbol;(function(e){return["simple-fill","simple-marker","simple-line","picture-marker","cim"].includes(e?.type)})(y)||(y=(0,a.f)(e,u),-1!==r||l.defaultSymbol||(o.defaultSymbol=y));const g="picture-marker"!==y.type&&!!y.color,E=(0,a.ah)(y);let w;if(-1===r)w=function(e){const{modules:t}=e;return[new t.EsriColor([255,255,255]),new t.EsriColor([178,178,178]),new t.EsriColor([128,128,128]),new t.EsriColor([92,92,92]),new t.EsriColor([77,77,77]),new t.EsriColor([51,51,51]),new t.EsriColor([26,26,26])]}(e);else{const t=i.typeSchemes.getSchemes({basemap:n.map?.basemap??"topo",geometryType:(0,a.I)(e)});w=(0,a.am)(t).slice(0,16)}let v;const P=y;v=P.outline?{color:P.outline.color?P.outline.color:new i.EsriColor([0,0,0,.5]),size:P.outline.width,style:P.outline.style,autoAdjusted:!1}:{color:new i.EsriColor([0,0,0,.5]),size:1,style:"solid",autoAdjusted:!1};const b=await m(e,d),C=p(b,i.esriLang.clone(y),{portal:s,symbolFilter:f&&!(0,a.ai)(e)?"simple":void 0,sections:{marker:{parts:{preview:!1,rotation:!1,size:!1}},fill:{type:"color",open:!0,optional:!0,suggestedColorsOpen:!0,parts:{transparency:!1}}},fill:{color:(0,a.h)(e,y)||O(w[r],.85)},stroke:v,fillEnabled:g,strokeEnabled:E});b.addEventListener("arcgisEdit",h.bind(null,(({detail:{symbol:t}})=>{t.outline&&(t.outline.width=0);const n=(0,a.m)(e);if(-1===r)n.defaultSymbol=t;else{const e=n.uniqueValueInfos.slice();e[r].symbol=t,n.uniqueValueInfos=e}c()}))),d.addStyler(b),await C}function T(e,t){const{modules:n}=e,r=[];for(let e=0;e<t.length-1;e++)r[e]=new n.AlgorithmicColorRamp({algorithm:"hsv",fromColor:t[e],toColor:t[e+1]||new n.EsriColor({r:255,g:255,b:255,a:1})});if(t.length>2){return new n.MultipartColorRamp({colorRamps:r})}return r[0]}function S(e,t){const{layer:n,modules:r,portal:o}=e,s=n,i=(0,a.m)(e),{defaultColors:l,extraColorRamps:u}=t,c={color:l?.reverse()||[new r.EsriColor([255,255,255,1]),new r.EsriColor([0,0,0,1])]},d={color:new r.EsriColor([0,0,0,.5]),size:1,style:"solid"},f=R(e);u&&f.push(...u),f.sort((e=>e.tags.indexOf("raster")>-1?-1:1));return"class-breaks"===i.type?f.forEach((t=>{t.stops=N(e,T(e,t.stops),i.classBreakInfos.length).map((e=>new r.EsriColor(e.slice(1)))).reverse()})):["unique-value","raster-stretch","raster-shaded-relief"].includes(i.type)&&f.forEach((e=>e.stops.reverse())),{portal:o,sections:{marker:{parts:{preview:!1,rotation:!1,size:!1}},fill:{type:"color-ramp",style:"class-breaks"===i.type?"discrete":"continuous",colorRamps:f,open:!0,colorRampsOpen:!0,parts:{colorRamps:!0,transparency:"imagery-tile"===s.type&&"unique-value"!==i.type},extraParts:{autoStrokeAdjust:!1,width:!0}}},stroke:{...d,color:[new r.EsriColor([13,38,68,1]),new r.EsriColor([56,98,122,1]),new r.EsriColor([98,158,176,1]),new r.EsriColor([177,205,194,1]),new r.EsriColor([255,252,212,1])]},fill:c}}function R(e){const{modules:t}=e;return t.rasterColorRampUtils.all().map((({name:e,colors:t})=>({name:e,stops:t,tags:["raster"]})))}function N(e,t,n){const{modules:r}=e;return r.rasterColorRampUtils.convertColorRampToColormap(t,{numColors:n,interpolateAlpha:!0})}function O(e,t){return e&&(e.a=t),e}function F(e,t){const{modules:n}=e;t?.forEach(((e,r)=>{0===e.r&&0===e.g&&0===e.b&&0===e.a&&(t[r]=new n.EsriColor([255,255,255,0]))}))}},20057:(e,t,n)=>{function r(e){return`// To configure a time series visualization using this template, data for this layer should be structured so that\n// each row represents a static feature with a fixed location, such as a country boundary or a city location.\n// The attribute table should have two or more fields that represent the same data attributes at different points in time for each feature.\n// Field names should refer to a specific attribute and a specific point in time, such as population in a specific year.\n// e.g. POP1990, POP2000, POP2010, POP2020, POP2030\n\n// There are four areas of this template where modification is necessary for the template to work with your layer\n// Two are required, and two are optional. \n\n// Examine your data and the details below to edit the template accordingly.\n\nvar FIELD_NAME_PATTERN = "POP{Y}"; // Required - Update this to match your data. See Lines 17-49 for details.\nExpects($feature, "POP*"); // Required - Update this to match your data. See Lines 51-63 for details.\nvar DEFAULT_FIELD_NAME = ""; // Optional - See Lines 65-79 for details.\nvar RESULT_FORMAT_PATTERN = "${e?.resultFormatPattern??"#,###.00"}"; // Optional - Update this to match your data. See Lines 81-93 for details.\n\n// FIELD_NAME_PATTERN\n//\n// The field name pattern is used to create the field name from the time slider values.\n// Patterns are defined using the following syntax: fieldName{pattern}\n//\n// EXAMPLE 1: given fields with names Cases_2023_10_01, Cases_2023_10_02, Cases_2023_10_03, etc., the field name pattern would be:\n// var FIELD_NAME_PATTERN = "Cases_{Y_MM_DD}";\n//\n// EXAMPLE 2: given fields with names POP2000, POP2010, POP2020, etc., the field name pattern would be:\n// var FIELD_NAME_PATTERN = "POP{Y}";\n//\n// The following patterns are supported:\n//\n// D: Day of the month, not padded (1 - 31)\n// DD: Day of the month, padded (01 - 31)\n// DDD: Ordinal day of the year (1 - 365)\n// d: Day of the week (1 - 7)\n// ddd: Abbreviated day of the week (e.g. Mon)\n// dddd: Full day of the week (e.g. Monday)\n// M: Month number (1 - 12)\n// MM: Month number, padded (01 - 12)\n// MMM: Abbreviated month name (e.g. Jan)\n// MMMM: Full month name (e.g. January)\n// Y: Full year\n// YY: Two-digit year\n// h: Civilian hours, not padded (1 - 12)\n// hh: Civilian hours, padded (01 - 12)\n// H: Military hours, not padded (0 - 23)\n// HH: Military hours, padded (00 - 23)\n// m: Minutes, not padded (0 - 59)\n// mm: Minutes, padded (00 - 59)\n// s: Seconds, not padded (0 - 59)\n// ss: Seconds, padded (00 - 59)\n\n// EXPECTS\n//\n// Copy and paste the part of the field pattern common to all fields\n// followed by an asterisk (*) into the second parameter of the Expects function.\n// This must be a raw text value like "POP*", not a variable name like FIELD_NAME_PATTERN.\n// \n// EXAMPLE 1: given fields with names Cases_2023_10_01, Cases_2023_10_02, Cases_2023_10_03, etc.\n//   - Expects($feature, \u201cCases_*\u201d);  // includes all fields that start with "Cases_"\n//   - Expects($feature, \u201cCases_2023*\u201d); // includes all Cases fields for the year 2023\n// \n// EXAMPLE 2: given fields with names POP2000, POP2010, POP2020, etc.\n//   - Expects($feature, "POP*"); // includes all fields that start with "POP"\n//   - Expects($feature, "POP2*"); // includes all "POP" fields for all years after 2000\n\n// DEFAULT_FIELD_NAME\n//\n// The field name to return if the time slider is closed.\n// Suggested values might include the first field in the time series,\n// the most recent field in the time series, or possibly an\n// aggregated value, such as TOTAL_POPULATION.\n// \n// EXAMPLE 1: The first field in the time series. Given fields with names POP2000, POP2010, POP2020, TOTAL_POPULATION,\n// var DEFAULT_FIELD_NAME = "POP2000";\n//\n// EXAMPLE 2: An aggregated value such as the total population. Given fields with names POP2000, POP2010, POP2020, TOTAL_POPULATION,\n// var DEFAULT_FIELD_NAME = "TOTAL_POPULATION";\n//\n// Note - If you defined a default field, be sure to include it in the Expects function as a third parameter.\n// e.g. Expects($feature, "POP*", "TOTAL_POPULATION");\n\n// RESULT_FORMAT_PATTERN\n//\n// The result format pattern is used to format the result of the calculation.\n// Patterns are defined using the following syntax: #,###.00\n// This should only be defined for formatting numeric values in labels or popups.\n// If using for symbology/layer styles, or the field data type\n// is a string, then leave this value empty.\n//\n// EXAMPLE 1: if returning a numeric value in a label,\n// var RESULT_FORMAT_PATTERN = "#,###"; // formats the value with commas and rounded to nearest integer\n// \n// EXAMPLE 2: if returning a numeric value in a popup,\n// var RESULT_FORMAT_PATTERN = "#,###.00"; // formats the value with commas and two decimal places\n\nfunction fieldsWithPatternFilter(field) {\n  var prefix = Front(Split(FIELD_NAME_PATTERN, "{"));\n  var suffix = Back(Split(FIELD_NAME_PATTERN, "}"));\n  var patternToFind = DefaultValue(prefix, suffix);\n  return Find(patternToFind, field.name) > -1;\n}\n\nfunction fieldsWithPatternMap(field) {\n  return field.name;\n}\n\nfunction getAllFieldsFromPattern() {\n  var fields = Schema($feature).fields;\n  return Sort(\n    Map(Filter(fields, fieldsWithPatternFilter), fieldsWithPatternMap)\n  );\n}\n\nfunction getFieldNameFromTimeProperties(dateValue, pattern) {\n  var fieldName = pattern;\n\n  var startPosition = Find("{", fieldName);\n  while (startPosition > -1) {\n    var startIndex = Find("{", fieldName, startPosition);\n    var endIndex = Find("}", fieldName, startIndex);\n    var searchText = Mid(fieldName, startIndex, endIndex - startIndex + 1);\n    var dateText = Text(dateValue, searchText);\n    fieldName = Replace(fieldName, searchText, dateText);\n    startPosition = Find("{", fieldName, endIndex);\n  }\n  fieldName = Replace(Replace(fieldName, "{", ""), "}", "");\n  return fieldName;\n}\n\nvar hasCurrentStart = HasValue($view, ["timeProperties", "currentStart"]);\nvar hasCurrentEnd = HasValue($view, ["timeProperties", "currentEnd"]);\n\nvar hasTimeProperties = hasCurrentStart || hasCurrentEnd;\n\nif (!hasTimeProperties) {\n  if (!IsEmpty(DEFAULT_FIELD_NAME) && HasKey($feature, DEFAULT_FIELD_NAME)) {\n    return $feature[DEFAULT_FIELD_NAME];\n  }\n  var firstField = Front(getAllFieldsFromPattern());\n  return $feature[firstField];\n}\n\nvar currentValue = DefaultValue(\n  $view.timeProperties.currentEnd,\n  $view.timeProperties.currentStart\n);\n\nfunction getValueAtInstant() {\n  var fieldName = getFieldNameFromTimeProperties(\n    currentValue,\n    FIELD_NAME_PATTERN\n  );\n  if (HasValue($feature, fieldName)) {\n    var value = $feature[fieldName];\n    return value;\n  }\n  return null;\n}\n\nfunction formatResult(value) {\n  if (IsEmpty(value)) {\n    return null;\n  }\n  if (IsEmpty(RESULT_FORMAT_PATTERN)) {\n    return value;\n  }\n  return Text(value, RESULT_FORMAT_PATTERN);\n}\n\nvar result = getValueAtInstant();\nreturn formatResult(result);`}n.d(t,{g:()=>r})}}]);