/*! For license information please see arcgis_analysis_node_modules_arcgis_map-config-components_dist_esm-040962.js.LICENSE.txt */
"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_map-config-components_dist_esm-040962"],{4573:(e,t,s)=>{function i(e,t,s){window.localStorage.setItem(e,s?JSON.stringify(t):t)}function r(e){window.localStorage.removeItem(e)}function a(e,t){const s=window.localStorage.getItem(e);return s&&t?JSON.parse(s):s}function c(e,t,s){window.sessionStorage.setItem(e,s?JSON.stringify(t):t)}function o(e,t){const s=window.sessionStorage.getItem(e);return s&&t?JSON.parse(s):s}s.d(t,{a:()=>o,b:()=>c,g:()=>a,r:()=>r,s:()=>i})},10465:(e,t,s)=>{s.d(t,{D:()=>i,a:()=>d,b:()=>h,c:()=>o,g:()=>k,s:()=>v});class i{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const r=(e,t,s)=>(0,c(t).subscribe)((t=>{const i=t.some((t=>((e,t)=>{let s=e;for(;s;){if(s===t)return!0;if(!s.parentNode)return!1;s=s.parentNode instanceof ShadowRoot?s.parentNode.host:s.parentNode}return!1})(e,t.target)));i&&s()})),a={},c=e=>{const t=e.join(","),s=a[t];if(void 0!==s)return s;const i=new Set,r=new MutationObserver((e=>i.forEach((t=>t(e)))));globalThis.document&&r.observe(document.documentElement,{attributes:!0,attributeFilter:e,subtree:!0});const c={subscribe:e=>(i.add(e),()=>{i.delete(e),0===i.size&&(r.disconnect(),a[t]=void 0)})};return a[t]=c,c},o=(e,t)=>{let s=e;for(;s;){const e=s.closest?.(t);if(e)return e;const i=s.getRootNode?.();if(i===globalThis.document)return null;s=i.host}return null},h=e=>n(e,"dir","ltr"),n=(e,t,s)=>{const i=o(e,`[${t}]`);return i?.getAttribute(t)??s},l=e=>{let t="";for(let s=0;s<e;s++)t+=(65536*(1+Math.random())|0).toString(16).substring(1);return t},d=()=>[l(2),l(1),l(1),l(1),l(3)].join("-"),p="ar,bg,bs,ca,cs,da,de,el,en,es,et,fi,fr,he,hr,hu,id,it,ja,ko,lt,lv,nl,nb,no,pl,pt-BR,pt-PT,ro,ru,sk,sl,sr,sv,th,tr,uk,vi,zh-CN,zh-HK,zh-TW".split(","),u=new Set(p),g="en",y={pt:"pt-PT",nb:"no",nn:"no",zh:"zh-CN"},m={},f=async(e,t)=>{const s=`${t}${e}.json`;try{const e=await fetch(s);if(e.ok)return await e.json()}catch(e){return console.error(e),{}}return e===g?{}:await f(g,t)},k=e=>{const t=n(e,"lang",globalThis.navigator?.language||g);return{lang:t,t9nLocale:S(t)}},S=e=>{const[t,s]=e.split("-"),i=t.toLowerCase();let r=i;return s&&(r=`${i}-${s.toUpperCase()}`),r=y[r]??r,u.has(r)?r:s?S(i):g},v=(e,t,s,i)=>{let a;const c=()=>w(e,t(),i).then((e=>{a?.lang===e.lang&&a.t9nLocale===e.t9nLocale&&a.t9nStrings===e.t9nStrings||s(e),a=e})).catch(console.error);return queueMicrotask(c),r(e,["lang"],c)},w=async(e,t,s=e.localName.split("-").slice(1).join("-"))=>{const{lang:i,t9nLocale:r}=k(e),a=`${t}/${s}/t9n`,c=null===s?{}:await(async(e,t,s="")=>{const i=`${t}/${s}`,r=`${i}${e}.json`;return m[r]??(m[r]=f(e,i)),await m[r]})(r,a,"messages.");return{lang:i,t9nLocale:r,t9nStrings:c}}},30425:(e,t,s)=>{s.r(t),s.d(t,{arcgis_sketch_features:()=>m});var i=s(11254),r=s(4573),a=s(17840),c=s(69811),o=s(14528),h=s(84260);s(56612),s(10465);function n(e){switch(e?.geometry?.type){case"point":return"text"===e?.symbol?.type?"text":"point";case"polyline":return"polyline";default:return"polygon"}}function l(e,t){const s=t.clone(),{paths:i,spatialReference:r}=s,a=i[0][0],c=i[0][2]??i[0][1],o=i[0][2]?i[0][1]:[(a[0]+c[0])/2,(a[1]+c[1])/2];2===i[0].length&&i[0].splice(1,0,o);return new e({curvePaths:[[[...a],d(a,o,c)]],paths:[...i],spatialReference:r})}function d(e,t,s){const[i,r]=e,[a,c]=t,[o,h]=s,n=2*a-i/2-o/2,l=2*c-r/2-h/2;return{b:[[o,h],[i+2/3*(n-i),r+2/3*(l-r)],[o+2/3*(n-o),h+2/3*(l-h)]]}}function p(e,t,s,i){const a=function(e){if(e)return(0,r.a)(e.webmap,!0)||(0,r.a)(e.current,!0)||void 0;return}(e)||{enabled:!0,selfEnabled:!0,featureEnabled:!0,featureSourcesIds:[t.id]};return new i({enabled:a.enabled,selfEnabled:a.selfEnabled,featureEnabled:a.featureEnabled,featureSources:u(s,a.featureSourcesIds)})}function u(e,t){const s=function(e){const{map:t}=e,s=t?.allLayers,i=s?.flatten((e=>"sublayers"in e?e.sublayers:null)).filter((e=>!e.isTable));return[...new Set(i?i.toArray():[])]}(e);return s.filter((e=>t.includes(e.id))).map((e=>({layer:e,enabled:!0})))}class g{constructor(e,t,s,i,r,a){this.mapNotesLayer=e,this.mapView=t,this.sketchViewModelPoint=new s({layer:this.mapNotesLayer.pointLayer??void 0,view:this.mapView,updateOnGraphicClick:!1,snappingOptions:i}),this.sketchViewModelPoint.on("update",(e=>r(e))),this.sketchViewModelLine=new s({layer:this.mapNotesLayer.polylineLayer??void 0,view:this.mapView,updateOnGraphicClick:!1,snappingOptions:i}),this.sketchViewModelLine.on("update",(e=>r(e))),this.sketchViewModelLine.on("duplicate",(e=>a(e))),this.sketchViewModelPolygon=new s({layer:this.mapNotesLayer.polygonLayer??void 0,view:this.mapView,updateOnGraphicClick:!1,snappingOptions:i}),this.sketchViewModelPolygon.on("update",(e=>r(e))),this.sketchViewModelText=new s({layer:this.mapNotesLayer.textLayer??void 0,view:this.mapView,updateOnGraphicClick:!1,snappingOptions:i}),this.sketchViewModelText.on("update",(e=>r(e)))}duplicate(){this.duplicatePoint(),this.duplicateLine(),this.duplicatePolygon(),this.duplicateText()}delete(){this.deletePoint(),this.deleteLine(),this.deletePolygon(),this.deleteText()}cancel(){this.cancelPoint(),this.cancelLine(),this.cancelPolygon(),this.cancelText()}destroy(){this.destroyPoint(),this.destroyLine(),this.destroyPolygon(),this.destroyText()}updatePoint(e){this.sketchViewModelPoint.update(e)}duplicatePoint(){this.sketchViewModelPoint.duplicate()}deletePoint(){this.sketchViewModelPoint.delete()}cancelPoint(){this.sketchViewModelPoint.cancel()}destroyPoint(){this.sketchViewModelPoint.destroy()}getLineSVM(){return this.sketchViewModelLine}async updateLine(e){const t=1===e.length&&!!e[0].geometry?.curvePaths?.length;await this.sketchViewModelLine.update(e,{reshapeOptions:{edgeOperation:t?"none":"split"}})}duplicateLine(){this.sketchViewModelLine.duplicate()}deleteLine(){this.sketchViewModelLine.delete()}cancelLine(){this.sketchViewModelLine.cancel()}destroyLine(){this.sketchViewModelLine.destroy()}updatePolygon(e){this.sketchViewModelPolygon.update(e)}duplicatePolygon(){this.sketchViewModelPolygon.duplicate()}deletePolygon(){this.sketchViewModelPolygon.delete()}cancelPolygon(){this.sketchViewModelPolygon.cancel()}destroyPolygon(){this.sketchViewModelPolygon.destroy()}updateText(e){this.sketchViewModelText.update(e)}duplicateText(){this.sketchViewModelText.duplicate()}deleteText(){this.sketchViewModelText.delete()}cancelText(){this.sketchViewModelText.cancel()}destroyText(){this.sketchViewModelText.destroy()}}const y="isTemporaryBezierRepresentation",m=class{constructor(e){(0,i.r)(this,e),this.arcgisChange=(0,i.c)(this,"arcgisChange",7),this.arcgisSketchFeaturesUpdated=(0,i.c)(this,"arcgisSketchFeaturesUpdated",7),this.arcgisAddFeature=(0,i.c)(this,"arcgisAddFeature",7),this.arcgisSketchFeaturesAddSketch=(0,i.c)(this,"arcgisSketchFeaturesAddSketch",7),this.arcgisEditFeatures=(0,i.c)(this,"arcgisEditFeatures",7),this.arcgisSketchFeaturesEditFeatures=(0,i.c)(this,"arcgisSketchFeaturesEditFeatures",7),this.arcgisCopyToNewSketchLayer=(0,i.c)(this,"arcgisCopyToNewSketchLayer",7),this.arcgisSketchFeaturesCopyToNewSketchLayer=(0,i.c)(this,"arcgisSketchFeaturesCopyToNewSketchLayer",7),this.manager=(0,o.u)(this),this.strings=(0,h.u)({blocking:!0}),this.renderingSymbolPreviews=!1,this.listItemNodes=[],this.graphicsSelectionHandles=[],this.graphicsUpdateHandles=[],this.selectedGraphics=[],this.selectedBezierGraphics=new Map,this.graphicsToConvertToBezierGraphics=[],this.duplicatedGraphicIndices=[],this.freezeGraphicsListOrder=!1,this.activeSVMCount=0,this.onGraphicUpdate=e=>{if(this.listItemNodes=this.listItemNodes.slice(0,this.graphics.length),"start"===e.state)if(this.freezeGraphicsListOrder||this.activeSVMCount)this.listItemNodes.forEach(((e,t)=>this.listItemNodes[t].selected=(0,a.i)(this.selectedGraphics.find((e=>e.index===t))))),this.freezeGraphicsListOrder=!1,this.activeSVMCount-=1;else{let t=!1;this.selectedGraphics=[],this.graphics.forEach(((s,i)=>{t||JSON.stringify(s.toJSON())!==JSON.stringify(e.graphics[0].toJSON())?this.listItemNodes[i]&&(this.listItemNodes[i].selected=!1):(t=!0,this.selectedGraphics.push({index:i,graphic:s}),this.listItemNodes[i]&&(this.listItemNodes[i].selected=!0),this.addActionsPopover())}))}if("active"===e.state){const t=this.sketchFeaturesSVModel?.getLineSVM();if(!t?.updateGraphics.length)return;1===this.selectedBezierGraphics.size&&1===this.selectedGraphics.length&&"reshape"===t.activeTool&&["move-start","reshape-start"].includes(e.toolEventInfo?.type)&&(this.freezeGraphicsListOrder=!0,this.selectedGraphics[0].graphic.visible=!1),"transform"===t.activeTool&&(this.freezeGraphicsListOrder=!0,e.graphics.forEach((e=>{const{modules:t}=this;e.attributes[y]&&(e.geometry=l(t.Polyline,e.geometry))})))}"complete"===e.state&&(this.arcgisSketchFeaturesUpdated.emit(),this.arcgisChange.emit())},this.onGraphicDuplicate=e=>{e.graphics.forEach((e=>{e.attributes[y]&&e.layer?.remove(e)}))},this.mapView=void 0,this.layer=void 0,this.hideAddSketch=!1,this.showAddSketch=!0,this.hideEditFeature=!1,this.showEditFeature=!0,this.snappingSessionStorageIds={current:"current",webmap:"webmap"},this.blockClosed=!1,this.open=!0,this.graphics=[]}sketchUpdatedHandler(e){e.stopPropagation(),(0,i.f)(this.el)}async setFocus(){this.addFeatureButtonNode?.setFocus()}async deactivate(){this.deactivateCurrentWorkflow()}async done(){this.snappingSessionStorageIds?.current&&function(e,t){const s=[...new Set([...e.featureSources.filter((e=>e.enabled)).map((e=>e.layer.id))])],i={enabled:e.enabled,selfEnabled:e.selfEnabled,featureEnabled:e.featureEnabled,featureSourcesIds:s};(0,r.b)(t,i,!0)}(this.snappingOptions,this.snappingSessionStorageIds.current),this.sketchFeaturesSVModel?.destroy(),this.mapView.popupEnabled=!0}async componentWillLoad(){this.showAddSketch||this.hideAddSketch||(this.hideAddSketch=!0),this.showEditFeature||this.hideEditFeature||(this.hideEditFeature=!0),this.open||this.blockClosed||(this.blockClosed=!0),await this.loadAllModules(),this.snappingOptions=p(this.snappingSessionStorageIds,this.layer,this.mapView,this.modules.SnappingOptions),this.sketchFeaturesSVModel=new g(this.layer,this.mapView,this.modules.SketchViewModel,this.snappingOptions,this.onGraphicUpdate,this.onGraphicDuplicate),this.combineMapNotesGraphics()}async componentDidRender(){const{strings:e,modules:t}=this;if(!this.renderingSymbolPreviews){this.renderingSymbolPreviews=!0;for(let s=0;s<this.graphics.length;s++){const i=this.el.shadowRoot.getElementById(`image-${s}`),r=await t.symbolUtils.renderPreviewHTML(this.graphics[s].symbol,{scale:!0,maxSize:20,size:{width:20,height:"polyline"===this.graphics[s].geometry?.type?6:20},..."text"===this.graphics[s].symbol?.type&&{overrideText:this.graphics[s].symbol?.text?.[0]||e.textPreview}});1===i.childElementCount&&i.firstElementChild?.isEqualNode(r)||(i.innerHTML="",i.appendChild(r))}this.renderingSymbolPreviews=!1}}componentDidLoad(){this.watchForChangesToMapNotesLayer(),this.watchForGraphicSelectionOnClick()}componentDidUpdate(){this.duplicatedGraphicIndices.length&&(this.listItemNodes.forEach(((e,t)=>this.listItemNodes[t].selected=this.duplicatedGraphicIndices.includes(t))),this.selectedGraphics=[],this.listItemNodes.forEach(((e,t)=>{if(e.selected){this.selectedGraphics.push({index:t,graphic:this.graphics[t]});!!this.graphics[t].geometry?.curvePaths?.length&&(this.freezeGraphicsListOrder=!0,this.createShadowBezierGraphicfromCurrentGraphic(this.graphics[t],t),this.graphicsToConvertToBezierGraphics.push(this.graphics[t]))}})),this.duplicatedGraphicIndices=[])}disconnectedCallback(){this.graphicsSelectionHandles.forEach((e=>e?.remove())),this.graphicsUpdateHandles.forEach((e=>e?.remove())),this.hitTestHandle?.remove(),this.cleanUpBezierGraphics(),this.unselectAllGraphics(),this.sketchFeaturesSVModel?.cancel(),this.sketchFeaturesSVModel?.destroy()}render(){const{strings:e,graphics:t,selectedGraphics:s,showAddSketch:r,open:a}=this;return this.listItemNodes=[],(0,i.h)(i.H,{key:"859e6415e53f50b958d87624e91cdab0a7acb0c1"},(0,i.h)("calcite-block",{key:"42a8acd58c0b5fd986c3f5bc3b0d41dc42706d29",ref:e=>this.blockNode=e,heading:e.sketches,open:a,collapsible:!0,onCalciteBlockOpen:()=>{s.length&&this.addActionsPopover()},onCalciteBlockClose:()=>this.removeActionsPopover()},(0,i.h)("calcite-list",{key:"daa7399053b1b08c77f782b8cd2e489d13d8185e",selectionMode:"multiple",label:e.sketches},t.map(((e,t)=>this.renderPickListItem(e,t)))),r?(0,i.h)("calcite-button",{ref:e=>this.addFeatureButtonNode=e,iconStart:"pencil-mark",appearance:"transparent",width:"full",onClick:()=>{const{layer:e}=this;this.cleanUpBezierGraphics(),this.removeActionsPopover(),this.unselectAllGraphics(),this.sketchFeaturesSVModel.cancel(),this.arcgisSketchFeaturesAddSketch.emit({layer:e}),this.arcgisAddFeature.emit({layer:e})}},e.addSketch):null))}renderPickListItem(e,t){const{strings:s,showEditFeature:r}=this;return(0,i.h)("calcite-list-item",{id:`graphic-${t}`,label:e?.attributes?.title||this.getStringFromType(e),onClick:()=>this.handleFeatureSelectionViaList(),onKeyDown:e=>{" "!==e.key&&"Enter"!==e.key||(e.preventDefault(),e.stopPropagation(),this.handleFeatureSelectionViaList())},ref:e=>this.listItemNodes.push(e)},(0,i.h)("div",{slot:"content-start",id:`image-${t}`}),r?(0,i.h)("calcite-action",{slot:"actions-end",text:s.edit,title:s.edit,scale:"s",icon:"pencil",onClick:t=>{t.preventDefault(),t.stopPropagation(),this.cleanUpBezierGraphics(),this.arcgisSketchFeaturesEditFeatures.emit({features:[e]}),this.arcgisEditFeatures.emit({features:[e]})}}):null)}async loadAllModules(){const[e,t,s,i,r,a]=await Promise.all([(0,c.a3)(),(0,c.l)(),(0,c.a4)(),(0,c.a5)(),(0,c.a6)(),(0,c.u)()]);this.modules={SketchViewModel:e,reactiveUtils:t,symbolUtils:s,drawUtils:i,SnappingOptions:r,Polyline:a}}deactivateCurrentWorkflow(){this.listItemNodes?.forEach((e=>{e&&(e.selected=!1)})),this.removeActionsPopover(),this.cleanUpBezierGraphics(),this.convertNonBezierGraphicsToBezierGraphics(),this.unselectAllGraphics(),this.sketchFeaturesSVModel.cancel(),this.combineMapNotesGraphics(),this.freezeGraphicsListOrder=!1,this.activeSVMCount=0}combineMapNotesGraphics(){this.graphics=[...this.layer.pointLayer.graphics,...this.layer.polylineLayer.graphics,...this.layer.polygonLayer.graphics,...this.layer.textLayer.graphics]}watchForChangesToMapNotesLayer(){const{modules:e}=this;for(const t of[this.layer.pointLayer,this.layer.polylineLayer,this.layer.polygonLayer,this.layer.textLayer]){const s=e.reactiveUtils.on((()=>t?.graphics),"change",(()=>{this.freezeGraphicsListOrder||this.combineMapNotesGraphics()}));this.graphicsSelectionHandles.push(s);const i=e.reactiveUtils.on((()=>t),"graphic-update",(e=>{"geometry"===e?.property||this.freezeGraphicsListOrder||this.combineMapNotesGraphics()}));this.graphicsUpdateHandles.push(i)}}watchForGraphicSelectionOnClick(){this.hitTestHandle?.remove(),this.hitTestHandle=this.mapView.on("click",(async e=>{const t=(await this.mapView.hitTest(e,{include:this.layer})).results;if(t.length){const e=["point","polyline","polygon"];t.sort(((t,s)=>e.indexOf(t.graphic.geometry.type)-e.indexOf(s.graphic.geometry.type)));const s=t[0].graphic;this.cleanUpBezierGraphics(),this.convertNonBezierGraphicsToBezierGraphics(),this.unselectAllGraphics(!0),this.handleFeatureSelectionViaHitTest(s)}else this.deactivateCurrentWorkflow()}))}unselectAllGraphics(e){this.selectedGraphics=[],this.listItemNodes.forEach((e=>{e&&(e.selected=!1)})),this.selectedBezierGraphics.forEach((e=>e.removeHandles())),this.selectedBezierGraphics.clear(),e||this.removeActionsPopover()}addActionsPopover(){this.sketchActionsPopoverNode||(this.sketchActionsPopoverNode=document.createElement("arcgis-sketch-actions-popover"),this.sketchActionsPopoverNode.referenceElement=this.blockNode,this.sketchActionsPopoverNode.selectedGraphics=this.selectedGraphics,this.sketchActionsPopoverNode.strings=this.strings,this.sketchActionsPopoverNode.addEventListener("arcgisEdit",(()=>{this.removeActionsPopover();const e=this.selectedGraphics.map((e=>e.graphic));this.arcgisSketchFeaturesEditFeatures.emit({features:e}),this.arcgisEditFeatures.emit({features:e}),this.cleanUpBezierGraphics(),this.unselectAllGraphics()})),this.sketchActionsPopoverNode.addEventListener("arcgisDuplicate",(async()=>{this.convertNonBezierGraphicsToBezierGraphics(),this.selectedBezierGraphics.size&&this.cleanUpBezierGraphics(),this.sketchFeaturesSVModel.duplicate(),await this.offsetDuplicatedFeatures(),this.combineMapNotesGraphics();const e=this.selectedGraphics.map((e=>e.graphic));this.duplicatedGraphicIndices=[],e.forEach((e=>{let t=!1;[...this.graphics].reverse().forEach(((s,i)=>{const r=this.graphics.length-1-i;t||this.duplicatedGraphicIndices.includes(r)||JSON.stringify(s.toJSON())!==JSON.stringify(e.toJSON())||(this.duplicatedGraphicIndices.push(r),t=!0)}))}))})),this.sketchActionsPopoverNode.addEventListener("arcgisCopy",(()=>{const e=this.selectedGraphics.map((e=>e.graphic));e.forEach((e=>{if(e.attributes[y]){e.visible=!0;const{[y]:t,...s}=e.attributes;e.attributes=s,e.geometry=l(this.modules.Polyline,e.geometry)}})),this.selectedBezierGraphics.forEach((e=>{e.removeHandles(),e.layer?.remove(e)})),this.selectedBezierGraphics.clear();const t=e.map((e=>e.clone()));this.arcgisSketchFeaturesCopyToNewSketchLayer.emit({features:t}),this.arcgisCopyToNewSketchLayer.emit({features:t})})),this.sketchActionsPopoverNode.addEventListener("arcgisDelete",(()=>{this.selectedBezierGraphics.forEach((e=>{e.removeHandles(),e.layer?.remove(e)})),this.selectedBezierGraphics.clear(),this.removeActionsPopover(),this.unselectAllGraphics(),this.sketchFeaturesSVModel.delete(),this.combineMapNotesGraphics(),this.freezeGraphicsListOrder=!1,this.activeSVMCount=0})),document.body.appendChild(this.sketchActionsPopoverNode)),this.sketchActionsPopoverNode.setFocus()}removeActionsPopover(){this.sketchActionsPopoverNode?.parentElement?.removeChild(this.sketchActionsPopoverNode),this.sketchActionsPopoverNode=void 0}getStringFromType(e){const{strings:t}=this;switch(e?.geometry?.type){case"point":return"text"===e?.symbol?.type?t.text:t.point;case"polyline":return t.line;case"polygon":return t.polygon;default:return t.point}}handleFeatureSelectionViaHitTest(e){switch(this.freezeGraphicsListOrder=!0,this.activeSVMCount=1,e.layer){case this.layer.pointLayer:this.sketchFeaturesSVModel.updatePoint([e]);break;case this.layer.textLayer:this.sketchFeaturesSVModel.updateText([e]);break;case this.layer.polylineLayer:this.sketchFeaturesSVModel.updateLine([e]);break;case this.layer.polygonLayer:this.sketchFeaturesSVModel.updatePolygon([e]);break;default:return}this.graphics?.forEach(((t,s)=>{if(JSON.stringify(t.toJSON())===JSON.stringify(e.toJSON())){if(!this.selectedGraphics.find((t=>JSON.stringify(t.graphic.toJSON())===JSON.stringify(e.toJSON())))){this.selectedGraphics.push({index:s,graphic:t});!!t?.geometry?.curvePaths?.length&&(this.freezeGraphicsListOrder=!0,this.createShadowBezierGraphicfromCurrentGraphic(t,s),this.graphicsToConvertToBezierGraphics.push(t))}}})),this.addActionsPopover()}handleFeatureSelectionViaList(){this.listItemNodes=this.listItemNodes.filter((e=>(0,a.i)(e))),this.listItemNodes.forEach(((e,t)=>{const s=Number.parseInt(e.id.split("-")[1]);if(e.selected){this.freezeGraphicsListOrder=!0;if(!this.selectedGraphics.find((e=>e.index===s))){this.selectedGraphics.push({index:s,graphic:this.graphics[s]});!!this.graphics[s].geometry.curvePaths?.length&&(this.freezeGraphicsListOrder=!0,this.createShadowBezierGraphicfromCurrentGraphic(this.graphics[s],s),this.graphicsToConvertToBezierGraphics.push(this.graphics[s]))}}else{const e=this.selectedBezierGraphics.get(t);if(e){e.removeHandles();const i=this.graphics[s],r=l(this.modules.Polyline,i.geometry);JSON.stringify(r)!==JSON.stringify(i.geometry)&&(i.geometry=r),i.visible=!0,e.layer?.remove(e),this.selectedBezierGraphics.delete(t);const a=this.selectedGraphics.find((e=>e.index===t));a&&this.selectedGraphics.splice(this.selectedGraphics.indexOf(a),1)}else{const e=this.selectedGraphics.find((e=>e.index===s));e&&this.selectedGraphics.splice(this.selectedGraphics.indexOf(e),1)}}})),this.selectedGraphics.length?(this.addActionsPopover(),this.sketchActionsPopoverNode.selectedGraphics=this.selectedGraphics,(0,i.f)(this.sketchActionsPopoverNode)):this.removeActionsPopover();let e=[],t=[],s=[],r=[];this.selectedGraphics.forEach((i=>{switch(n(i.graphic)){case"polyline":t=[...t,i.graphic];break;case"polygon":s=[...s,i.graphic];break;case"text":r=[...r,i.graphic];break;default:e=[...e,i.graphic]}}));const c=[e,t,s,r].filter((e=>e.length));this.activeSVMCount=c.length,this.freezeGraphicsListOrder=!0,e.length?this.sketchFeaturesSVModel.updatePoint(e):this.sketchFeaturesSVModel.cancelPoint(),t.length?this.sketchFeaturesSVModel.updateLine(t):this.sketchFeaturesSVModel.cancelLine(),s.length?this.sketchFeaturesSVModel.updatePolygon(s):this.sketchFeaturesSVModel.cancelPolygon(),r.length?this.sketchFeaturesSVModel.updateText(r):this.sketchFeaturesSVModel.cancelText(),this.watchForGraphicSelectionOnClick(),this.selectedGraphics.length||(this.sketchFeaturesSVModel.cancel(),this.combineMapNotesGraphics(),this.freezeGraphicsListOrder=!1,this.activeSVMCount=0)}async offsetDuplicatedFeatures(){const{modules:e}=this;this.selectedGraphics.forEach((t=>e.drawUtils.move(t.graphic.geometry,15*this.mapView.resolution,15*this.mapView.resolution)));let t=[],s=[],i=[],r=[];this.selectedGraphics.forEach((e=>{switch(n(e.graphic)){case"polyline":s=[...s,e.graphic];break;case"polygon":i=[...i,e.graphic];break;case"text":r=[...r,e.graphic];break;default:t=[...t,e.graphic]}}));const a=[t,s,i,r].filter((e=>e.length));this.activeSVMCount=a.length,this.freezeGraphicsListOrder=!0,t.length&&this.sketchFeaturesSVModel.updatePoint(t),s.length&&(s.forEach((t=>{t.geometry.curvePaths?.length&&(t.geometry=l(e.Polyline,t.geometry))})),await this.sketchFeaturesSVModel.updateLine(s)),i.length&&this.sketchFeaturesSVModel.updatePolygon(i),r.length&&this.sketchFeaturesSVModel.updateText(r)}createShadowBezierGraphicfromCurrentGraphic(e,t){const{modules:s}=this,i=e.clone();i.attributes={...i.attributes,[y]:!0},i.visible=!0;const{mapView:r}=this,a=r.allLayerViews?.items.find((({layer:e})=>e===this.layer)),c=a?.highlight(i);i.addHandles([s.reactiveUtils.watch((()=>e.geometry.paths?.[0]),(t=>this.handleCurvedGraphicPathChange(i,e,t))),c]),this.layer.polylineLayer.add(i),this.selectedBezierGraphics.set(t,i)}handleCurvedGraphicPathChange(e,t,s){const{modules:i}=this;t.visible=!1,e.geometry&&Array.isArray(s)&&(e.geometry=l(i.Polyline,t.geometry))}cleanUpBezierGraphics(){this.selectedBezierGraphics.forEach((e=>{e.removeHandles(),e.layer.remove(e)})),this.selectedBezierGraphics.clear()}convertNonBezierGraphicsToBezierGraphics(){this.graphicsToConvertToBezierGraphics.forEach((e=>{const t=l(this.modules.Polyline,e.geometry);JSON.stringify(t)!==JSON.stringify(e.geometry)&&(e.geometry=t),e.visible=!0})),this.graphicsToConvertToBezierGraphics=[]}static get assetsDirs(){return["assets"]}get el(){return(0,i.a)(this)}};m.style=".actions-start-padding{padding:8px}"},84260:(e,t,s)=>{s.d(t,{u:()=>c});var i=s(11254),r=s(10465),a=s(14528);function c({propertyName:e="strings",name:t}){let s=(0,a.r)();const c=(0,r.g)(s.el),h=new r.D,n={_lang:c.lang,_t9nLocale:c.t9nLocale};s.manager.onLoad((()=>h.promise));const l=new WeakRef(s);function d(){const e=l.deref();return e||u?.(),e}s=void 0;const p=o((()=>d()?.el)),u=(0,r.s)(p,(()=>(0,i.g)("./assets")),(({t9nLocale:t,t9nStrings:s,lang:i})=>{const r=d();if(!r)return;r[e]={...s,_lang:i,_t9nLocale:t},h.resolve()}),t);return n}const o=e=>new Proxy({},{get(t,s){const i=e();if(!i)return;const r=Reflect.get(i,s,i);return"function"==typeof r?r.bind(i):r}})}}]);