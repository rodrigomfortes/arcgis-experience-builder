/*! For license information please see arcgis_analysis_node_modules_arcgis_map-config-components_dist_esm-5ca37f.js.LICENSE.txt */
"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_map-config-components_dist_esm-5ca37f"],{17840:(e,t,a)=>{a.d(t,{a:()=>c,b:()=>x,c:()=>p,d:()=>y,e:()=>u,f:()=>o,g:()=>I,h:()=>w,i:()=>n,j:()=>g,k:()=>d,l:()=>F,m:()=>l,n:()=>v,o:()=>i,p:()=>f,q:()=>b,t:()=>m});var r=a(56612),s=a(69811);function n(e){return null!=e}function i(e,t){const a=e.fieldName;if(a.includes(r.f.expression)){const e=t.get(a);return e?.title?e.title:a}return e.label?e.label:a}async function o(e){return new Map((await p(e)).filter((e=>e.visible)).map((e=>[e.name,e])))}function l(e){const t=new Map;return e?.expressionInfos&&e.expressionInfos.forEach((e=>{const a=`${r.f.expression}${e.name}`;t.set(a,e)})),t}function c(e){return"map-image"===e?.layer?.type?r.s.mapImage:"subtype-sublayer"===e?.type?r.s.subtype:"tile"===e?.layer?.type?r.s.tile:"scene"===e?.type?r.s.scene:"ogc-feature"===e?.type?r.s.ogcFeature:"imagery"===e?.type?r.s.imagery:"imagery-tile"===e?.type?r.s.imageryTile:"wfs"===e?.type?r.s.wfs:"wcs"===e?.type?r.s.wcs:"wms"===e?.layer?.type?r.s.wms:"csv"===e?.type?r.s.csv:"geojson"===e?.type?r.s.geojson:"stream"===e?.type?r.s.stream:"oriented-imagery"===e?.type?r.s.orientedImagery:"catalog"===e?.type?r.s.catalog:"catalog-footprint"===e?.type?r.s.catalogFootprint:"knowledge-graph-sublayer"===e?.type?r.s.knowledgeGraphSublayer:"voxel"===e?.type?r.s.voxel:"parquet"===e?.type?r.s.parquet:r.s.feature}function u(e){const t=c(e);let a;return t===r.s.wms||t===r.s.mapImage?a=e?.layer.version:t!==r.s.imagery&&t!==r.s.feature&&t!==r.s.scene||(a=e.version),Number.parseFloat(a)}async function p(e){return await new Promise(((t,a)=>{switch(c(e)){case r.s.feature:case r.s.ogcFeature:case r.s.stream:t(e.fields);break;case r.s.mapImage:{const r=e,s=r?.layer;s?.portalItem&&s.url.includes("https://demographics")&&s.url.includes(".arcgis.com")?s.portalItem?.fetchData().then((e=>{if(e?.thematicGroup){const a=new Map(r.fields.map((e=>[e.name,e]))),s=e.thematicGroup.fieldNames,n=[];s.forEach((e=>{a.has(e)&&n.push(a.get(e))})),t(n)}else t(r.fields)})).catch((e=>{a(new Error(e))})):t(r.fields);break}case r.s.imagery:case r.s.imageryTile:case r.s.wcs:t(e.rasterFields);break;default:t("fields"in e?e.fields??[]:[])}}))}function y(e){if(e)switch(e.type){case"point":return e;case"extent":return e.center;case"polygon":return e.centroid;case"multipoint":case"polyline":return e.extent?.center;default:return}}function f(e){return Number((100*(1-e)).toFixed(1))}function m(e){return Number((1-e/100).toFixed(3))}const g=(e,t)=>{const a=[];return e?.fieldInfos?.forEach((e=>{e.fieldName?.includes(r.f.expression)?t&&a.push({name:e.fieldName.slice(r.f.expression.length),alias:e.fieldName.slice(r.f.expression.length),type:"string"}):a.push({name:e.fieldName,alias:e.label,type:"string"})})),a},w=async(e,t)=>{const[a,r]=await Promise.all([(0,s.w)(),(0,s.x)()]),n=new r;n.geometry=t.extent,n.mapExtent=t.extent,n.returnGeometry=!0,n.tolerance=6,n.layerOption="popup",n.width=t.width,n.height=t.height,n.layerIds=[e.id];const i=(await a.identify(e.layer.url,n))?.results,o=i?.[0]?.feature;return o},d=async(e,t,a)=>{const r=await e.whenLayerView(t),s=await r.queryAggregates();return await h(a,s.features?.[0])},h=async(e,t)=>{const a=await(0,s.q)(),r=await(0,s.r)();let n;if(t)n=t.clone();else{n=new a;const t=g(e,!1);if(t?.length){const e={};t.forEach((t=>{e[t.name]=""})),n.attributes=e}const s=new r;n.geometry=s}return n};function b(e,t){const a=t.startsWith("#"),r=t.startsWith(".");for((r||a)&&(t=t.slice(1));e;){if(a){if(e.id===t)return e}else if(r){if(e.classList.contains(t))return e}else if(e.tagName.toLowerCase()===t.toLowerCase())return e;e=e.parentElement??e.getRootNode()?.host??void 0}}async function x(e){if(c(e)===r.s.stream)return await Promise.resolve("point");if(e.geometryType)return await Promise.resolve(e.geometryType);if(c(e)===r.s.mapImage&&e?.layer?.sourceJSON?.layers){const t=e.layer?.sourceJSON.layers.find((t=>{if(t.id===e.id)return t}))?.geometryType?.toLowerCase();if(t)return t.indexOf("point")>-1?await Promise.resolve("point"):t.indexOf("line")>-1?await Promise.resolve("polyline"):t.indexOf("polygon")>-1?await Promise.resolve("polygon"):await Promise.resolve(t);{const t=e?.layer?.findSublayerById(e.id);if(t){const e=await(t?.createFeatureLayer());return e?(await e.load(),await Promise.resolve(e?.geometryType)):void await Promise.resolve()}return void await Promise.resolve()}}await Promise.resolve()}function v(e,t,a){let r="";if(/^raster.(?:item|service)pixelvalue/iu.test(e))r="number";else if(t.has(e)){const a=t.get(e);r=a.type?a.type.toLowerCase():""}else if(a.has(e)){const t=a.get(e);r=t.returnType?t.returnType.toLowerCase():""}else r="number";return r}async function I(e,t){return"feature"!==e.type||e.url?"feature"===e.type||"csv"===e.type||"scene"===e.type||"wfs"===e.type||"geojson"===e.type||"oriented-imagery"===e.type||"subtype-group"===e.type||"subtype-sublayer"===e.type||"catalog"===e.type||"catalog-footprint"===e.type?await e.queryFeatureCount():!t||"stream"!==e.type&&"ogc-feature"!==e.type?await Promise.reject(new Error(`Can't get feature count for layer of type ${e.type}.`)):await async function(e,t){const a=await t.whenLayerView(e);return await a.queryFeatureCount()}(e,t):await async function(e){const t=e.createQuery();t.outFields=["*"];const a=await e.queryFeatures(t);if(a.features?.length)return a.features.length;throw new Error("could not get feature count")}(e)}async function F(e,t){try{const a=c(e);if(a===r.s.mapImage&&e.layer.version>=10.5&&!e.layer.capabilities?.operations?.supportsQuery&&e.layer.capabilities?.operations?.supportsIdentify){return{features:[await w(e,t)||await P(e,t)]}}if(a===r.s.scene&&!e.capabilities?.operations?.supportsQuery){return{features:[await P(e,t)]}}const s=a===r.s.ogcFeature||a===r.s.stream?await t.whenLayerView(e):e,n=s.createQuery();n.where=s.definitionExpression||"1=1",n.outFields=["*"],n.returnM="hasM"in e&&e.hasM,n.returnZ="hasZ"in e&&e.hasZ,n.outSpatialReference=t.spatialReference,n.returnGeometry=!0,(s.sourceJSON?.advancedQueryCapabilities?.supportsPagination||a===r.s.ogcFeature)&&(n.start=0,n.num=1),n.outSpatialReference=t.spatialReference;const i=await s.queryFeatures(n);return i?.features?.length||(i.features[0]=await P(e,t)),i}catch(e){console.error(e)}}async function P(e,t){const[a,r,n,i,o]=await Promise.all([(0,s.q)(),(0,s.s)(),(0,s.t)(),(0,s.u)(),(0,s.v)()]);return await new Promise((s=>{const l=new a;if(e.fields?.length){const t={};e.fields.forEach((e=>{t[e.name]=e.defaultValue})),l.attributes=t}const c=t.extent;let u;"polygon"===e.geometryType?u=n.fromExtent(c):"point"===e.geometryType?u=c.center.clone():"multipoint"===e.geometryType?u=new r({points:[[c.center.x,c.center.y]],spatialReference:c.center.spatialReference.clone()}):"polyline"===e.geometryType?(u=new i({spatialReference:t.spatialReference.clone()}),u.addPath([[c.xmin,c.ymin],[c.xmax,c.ymax]])):"mesh"===e.geometryType&&(u=o.createBox(c.center.clone(),{size:{width:50,height:50,depth:50}})),l.geometry=u,s(l)}))}},56612:(e,t,a)=>{var r,s,n,i;a.d(t,{a:()=>i,f:()=>r,l:()=>s,s:()=>n}),function(e){e.expression="expression/",e.raster="Raster.",e.relationship="relationships/"}(r||(r={})),function(e){e.cluster="cluster",e.feature="feature",e.mapNotes="mapNotes"}(s||(s={})),function(e){e.catalog="catalog",e.catalogFootprint="catalog-footprint",e.csv="csv",e.feature="feature",e.geojson="geojson",e.imagery="imagery",e.imageryTile="imagery-tile",e.knowledgeGraphSublayer="knowledge-graph-sublayer",e.mapImage="map-image",e.ogcFeature="ogc-feature",e.orientedImagery="oriented-imagery",e.parquet="parquet",e.scene="scene",e.stream="stream",e.subtype="subtype",e.tile="tile",e.voxel="voxel",e.wcs="wcs",e.wfs="wfs",e.wms="wms"}(n||(n={})),function(e){e.bigInteger="big-integer",e.date="date",e.dateOnly="date-only",e.double="double",e.globalId="global-id",e.guid="guid",e.integer="integer",e.long="long",e.number="number",e.oid="oid",e.single="single",e.smallInteger="small-integer",e.string="string",e.timeOnly="time-only",e.timestampOffset="timestamp-offset"}(i||(i={}))}}]);