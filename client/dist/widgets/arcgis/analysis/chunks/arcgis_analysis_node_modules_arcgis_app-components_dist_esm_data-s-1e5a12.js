/*! For license information please see arcgis_analysis_node_modules_arcgis_app-components_dist_esm_data-s-1e5a12.js.LICENSE.txt */
"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_data-s-1e5a12"],{28748:(e,t,r)=>{r.d(t,{a:()=>i,b:()=>p,c:()=>n,d:()=>u,e:()=>S,f:()=>c,g:()=>h,h:()=>b,i:()=>f,j:()=>l,k:()=>d});var a=r(50637),o=r(59317),s=r(63054);function n(e,t){const r={type:"folder",path:`/fileShares/${t}`,info:{datastoreConnectionType:"shared",path:e.publisherFolderPath,hostName:e.publisherFolderPathHostname}};return"newPath"===e.serverFolderPath?(r.clientPath=e.publisherFolderPath,r.info.path=e.newServerFolderPath,r.info.datastoreConnectionType="replicated"):"nfsHostAndPath"===e.serverFolderPath&&(r.clientPath=e.publisherFolderPath,r.provider="UserManaged",r.info.datastoreConnectionType="replicated",r.info.fileServerPath=e.nfsSharePath,r.info.fileServerHost=e.nfsHostName,r.info.fileServerType="nfs"),r}function i(e,t){const r={type:"egdb",path:"/enterpriseDatabases/"+t,info:{dataStoreConnectionType:"shared"}};return"newConnection"===e.serverDatabaseOption?(r.info.connectionString=e.serverConnectionString,r.info.clientConnectionString=e.publisherConnectionString,r.info.dataStoreConnectionType="replicated"):"bigquery"===e.databaseProvider||"snowflake"===e.databaseProvider?(r.info.JDBCConnection=e.jdbcConnection,r.info.implementation=e.databaseProvider):"databricks"===e.databaseProvider?(r.provider=e.databaseProvider,r.info.connectionProperties=e.connectionProperties,r.info.implementation=e.databaseProvider):r.info.connectionString=e.publisherConnectionString,r}const c=async(e,t,r,a)=>{let o,s;if((null==r?void 0:r.length)>0){try{s=JSON.parse(r)}catch(e){return{error:{code:"invalidJSON"}}}o=function(e,t){const{type:r,project_id:a,private_key_id:o,private_key:s,client_email:n,client_id:i,auth_uri:c,token_uri:l,auth_provider_x509_cert_url:d,client_x509_cert_url:u}=t,p={oAuthType:0,projectId:e,url:"jdbc:bigquery://https://www.googleapis.com/bigquery/v2:443",oAuthPvtKeyFile:{type:r,project_id:a,private_key_id:o,private_key:s,client_email:n,client_id:i,auth_uri:c,token_uri:l,auth_provider_x509_cert_url:d,client_x509_cert_url:u}};return p}(e,s)}else(null==a?void 0:a.length)>0&&(o=function(e,t,r){const a={name:"BigqueryArcgisPlatform_RefreshToken",className:"com.esri.sds.bigquery.jdbc.GBQDataSource",oAuthType:2,projectId:e,defaultDataset:t,url:"jdbc:bigquery://https://www.googleapis.com/bigquery/v2:443",oAuthRefreshToken:r};return a}(e,t,a));return{result:{type:"egdb",path:"/enterpriseDatabases/bigQuerySvrDevDataJdbc",id:null,clientPath:null,info:{implementation:"bigquery",JDBCConnection:o}}}};function l(e){let t;const{server:r,httpPath:a,catalog:o,clientId:s,secret:n,token:i,authenticationType:c}=e,l=Object.assign({hostname:r,port:443,httpPath:a},o?{catalog:o}:{});return"oAuthMachineToMachine"===c?t=Object.assign({authenticationScheme:"oauth2",authenticationFlow:"machineToMachine",oauth2ClientId:s,oauth2Secret:n},l):"personalAccessToken"===c&&(t=Object.assign({authenticationScheme:"personalAccessToken",token:i},l)),{path:"/enterpriseDatabases/databricks",type:"egdb",provider:"databricks",info:{implementation:"databricks",connectionProperties:t}}}function d(e){let t;const{authenticationType:r,user:a,database:o,role:s,server:n,warehouse:i,schema:c,password:l,keyFile:d,passcode:u}=e,p={user:a,database:o,role:s,connectionUrl:`jdbc:snowflake://${n}`,warehouse:i,schema:c};return t="keyPair"===r?Object.assign(Object.assign({},p),{passcode:u||void 0,authenticator:"snowflake_jwt",keyfile:d}):Object.assign(Object.assign({},p),{password:l,authenticator:"snowflake"}),{path:"/enterpriseDatabases/snowflakeJdbc",type:"egdb",info:{implementation:"snowflake",JDBCConnection:t}}}function u(e,t){if("Arango"===e.noSqlProvider){const t={type:"nosql",path:"/nosqlDatabases/Arango_enterprise",info:{systemManaged:!1,dsFeature:"graphStore",isManagedData:!1,category:"database",factory:"nosql",provider:"ArangoDB",implementation:"ArangoDB",purposes:["knowledge-graph"],connectionProperties:{hosts:[],useSsl:e.useSsl,username:e.username,password:e.password,database:e.database}}};return""!==e.hosts?t.info.connectionProperties.hosts=e.hosts.split(","):delete t.info.connectionProperties.hosts,t}const r={type:"nosql",path:`/nosqlDatabases/${t}`,info:{provider:"Neo4J",isManaged:!1,dsFeature:"graphStore",factory:"nosql",implementation:"Neo4j",category:"database",systemManaged:!1,isManagedData:!1,purposes:["knowledge-graph"],connectionProperties:{connectionUri:e.connectionUri,username:e.username,password:e.password,database:e.database,fallbackServerAddresses:[]}}};return""!==e.fallBackServers?r.info.connectionProperties.fallbackServerAddresses.push(e.fallBackServers.split(",")):delete r.info.connectionProperties.fallbackServerAddresses,r}function p(e,t){const r=e.provider,a={info:{}},o={credentialType:"accesskey"};return"amazon"===r&&("accessKey"===e.credentialType?(o.accessKeyId=e.accessKey,o.secretAccessKey=e.secretKey):o.credentialType=e.credentialType,"custom"===e.selectedRegion.id?o.regionEndpointUrl=e.storageURL:(o.regionEndpointUrl=y(e.regions,e.selectedRegion),o.region=e.selectedRegion.id),a.info.objectStore=e.bucketName,a.provider="amazon"),"google"===r&&(o.accessKeyId=e.accessKey,o.secretAccessKey=e.secretKey,o.regionEndpointUrl="https://storage.googleapis.com",a.info.objectStore=e.bucketName,a.provider="Google"),"azure"!==r&&"azuredatalakegen2store"!==r||("sharedKey"===e.azureAuthenticationType?(o.credentialType="accessKey",o.accountKey=e.accountKey):"activeDirectory"===e.azureAuthenticationType?(o.credentialType=e.azureIdentityType,"servicePrincipal"===e.azureIdentityType?(o.tenantId=e.tenantId,o.clientId=e.clientId,o.clientSecret=e.clientSecret,o.authorityHost=e.authorityHost):"userAssignedIdentity"===e.azureIdentityType&&(o.managedIdentityClientId=e.clientId)):"sasToken"===e.azureAuthenticationType?(o.credentialType=e.azureAuthenticationType,o.sasToken=e.token):"anonymous"===e.azureAuthenticationType&&(o.credentialType=e.azureAuthenticationType),"other"===e.environment.id||"anonymous"===e.azureAuthenticationType?o.regionEndpointUrl=e.endpoint:o.accountEndpoint=y(e.regions,e.environment),"azure"===r?(a.info.objectStore=e.containerName,a.provider="azure"):(a.info.folder=e.cloudFolder?`${e.containerName}/${(0,s.j)(e.cloudFolder)}`:e.containerName,a.provider="azureDataLakeStore"),"azureGeocatalog"===e.selectedServiceType?(o.tokenGenerationUrl=e.tokenGenerationUrl,o.scopes=[e.scope]):"microsoftPlanetaryComputers"===e.selectedServiceType&&(o.tokenGenerationUrl=e.tokenGenerationUrl),"anonymous"!==e.azureAuthenticationType&&"microsoftPlanetaryComputers"!==e.selectedServiceType&&(o.accountName=e.accountName)),"alibaba"===r&&(o.accessKeyId=e.accessKey,o.secretAccessKey=e.secretKey,a.info.objectStore=e.bucketName,a.provider="Alibaba",o.regionEndpointUrl="custom"===e.selectedRegion.id?e.storageURL:y(e.regions,e.selectedRegion)),o.defaultEndpointsProtocol="https",e.cloudFolder&&"azuredatalakegen2store"!==r&&(a.info.objectStore=a.info.objectStore+"/"+(0,s.j)(e.cloudFolder)),a.type="cloudStore",["azureGeocatalog","microsoftPlanetaryComputers"].includes(e.selectedServiceType)&&("azureGeocatalog"===e.selectedServiceType?a.path="/cloudStores/azureGeocatalog":a.path="/cloudStores/microsoftPlanetaryComputers"),a.path="/cloudStores/"+t,a.info.connectionString=JSON.stringify(o),a}function y(e,t){let r;return e.forEach((function(e){e.id===t.id&&(r=e.blobStoreEndpoint||e.storageEndpointSuffix)})),r}const h=async(e,t)=>{const r=e.results.out_connectionString.paramUrl,o=`${t}/Get%20Database%20Connection%20String/jobs/${e.jobId}/${r}`,s=await(0,a.r)(o);return v(s)},v=e=>{const t=e.value;return{connectionStringProps:g(t),connectionString:t}},g=e=>{let t=[];return e&&e.split(";").forEach((e=>{const r=e.split("=");2!==r.length||m(t,r[0])||t.push({key:r[0],value:r[1]})})),t},m=(e,t)=>e.some((e=>e.key===t)),f=()=>{var e;const t=o.c.portal,r=t.portalDeploymentType||(null===(e=t.sourceJSON)||void 0===e?void 0:e.portalDeploymentType);return t.isPortal&&"ArcGISEnterpriseOnKubernetes"===r},S=e=>{if(!e)return"";return`${e}/rest/services/System/PublishingTools/GPServer`},b=(e,t,r,a)=>{var o;return Object.assign(Object.assign({},e),{children:null===(o=e.children)||void 0===o?void 0:o.filter((e=>{const o=e.type;let s=!1;return"folder"===o||("tile-layer"===r?s||(s="tiles"===a&&"cacheDataset"===o||"3dTiles"===a&&"3DTilesDataset"===o||"vectorTiles"===a&&"vectorCacheDataset"===o):"scene-layer"===r&&(s=w(e,o,t)),s)}))})},w=(e,t,r)=>{let a=!1;return r?"lasd"===e.path.split(".").pop().toLowerCase()?a=!1:a||(a="LASDataset"===t||"LIDARExchangeFile"===t):a||(a="extractedScenePackage"===t||"i3sRestCache"===t),a}},62296:(e,t,r)=>{r.d(t,{a:()=>j,b:()=>D,c:()=>C,d:()=>b,e:()=>T,f:()=>f,g:()=>h,h:()=>g,i:()=>v,p:()=>y,v:()=>S});var a=r(87744),o=r(68194),s=r(59317),n=r(28748),i=r(5152),c=r(32710),l=r(43555),d=r(50637),u=r(3826);const p=async(e,t)=>{var r;const o=s.c.portal,n=`${`${(0,a.g)(o)}portals/${o.id}`}/jobs/${encodeURIComponent(e)}/?key=${encodeURIComponent(t)}`;try{return{result:await(0,d.p)(n,{pendingStatuses:["processing","submitted"],successStatuses:["succeeded"]},"post")}}catch(e){console.error(e);const t=null===(r=e.messages)||void 0===r?void 0:r[0];return(null==t?void 0:t.includes("ERROR 000623"))?{error:{code:"invalidDataStorePublishType"}}:{error:{code:"unhandledError",message:JSON.stringify(e)}}}},y=async(e,t,r)=>{var o,n,c,h,v;try{const{folder:g,type:m,cacheStoreId:f,serviceName:S,pathInCachedStore:b,description:w,serverId:T,tags:P}=e;let k;switch(m){case"i3sRestCache":case"extractedScenePackage":k="SceneServer";break;case"vectorCacheDataset":k="VectorTileServer";break;case"cacheDataset":k=r?"ImageServer":"MapServer";break;case"3DTilesDataset":k="3DTilesServer"}const j={serviceConfiguration:JSON.stringify({type:k,serviceName:S,properties:{pathInCachedStore:b,cacheStoreId:f}}),serverId:T,tags:P,f:"json"},D=`${(0,a.g)()}portals/self/datastores/publish`,{jobId:C,key:O}=await(0,d.r)(D,j,{},"post"),{error:I,result:_}=await p(C,O);if("invalidDataStorePublishType"===(null==I?void 0:I.code))return"cacheDataset"===e.type?y(e,t,!0):{error:{code:"invalidDataStorePublishType",message:JSON.stringify(I.message)}};if(I)return{error:{code:"failToPublishFromDataStore",message:JSON.stringify(I.message)}};const N=null===(o=null==_?void 0:_.result)||void 0===o?void 0:o.services[0];let A;if((0,i.a)(g)||await(0,l.m)(N.serviceItemId,g.id),(null===(c=null===(n=s.c.portal)||void 0===n?void 0:n.sourceJSON)||void 0===c?void 0:c.hasClassificationSchema)&&(u.a.classification.createdUser=s.c.user.username,u.a.classification.createdDate=Date.now()),"3DTilesServer"===k){const{result:e}=await(0,l.a)(N.serviceItemId),t=[...e.typeKeywords];"3dTiles"===u.a.tileLayerPublishType&&t.push(u.a.tilesLayer3dTilesLayerType),A=null==t?void 0:t.join(",")}let J=Object.assign(Object.assign(Object.assign({},"3DTilesServer"===k&&{typeKeywords:A}),{snippet:w,f:"json"}),(null===(v=null===(h=s.c.portal)||void 0===h?void 0:h.sourceJSON)||void 0===v?void 0:v.hasClassificationSchema)?{classification:JSON.stringify(u.a.classification)}:{});return await(0,l.u)(N.serviceItemId,J),{result:N}}catch(e){return console.error(e),{error:{code:"failToPublishFromDataStore",message:JSON.stringify(e)}}}},h=async(e,t,r,o)=>{const n=s.c.portal,i=`${`${(0,a.g)(n)}portals/${n.id}`}/datastores/describe`,c={datastoreId:e,serverId:o,path:t,type:r,f:"json"};try{const{jobId:e,key:t}=await(0,d.r)(i,c,{},"post"),{result:r}=await p(e,t);return{result:r.result}}catch(e){return console.error(e),{error:{code:"failToListDataStoreContents",message:JSON.stringify(e)}}}},v=async(e,t)=>{const r=s.c.portal,o=`${`${(0,a.g)(r)}portals/${r.id}`}/datastores/validate`,n={datastoreId:t,serverId:e.id,f:"json"};try{const{status:e}=await(0,d.r)(o,n,{},"post");return{result:e}}catch(e){return console.error(e),{error:{code:"unhandledError",message:JSON.stringify(e)}}}},g=async(e,t,r)=>{let a;try{const{result:o}=await(0,d.a)(e,t,{useProxy:!0},"post").then((e=>{if("success"===e.status)return a=e.item.itemName,m(e.item,r)}));return{result:Object.assign(Object.assign({},o),{itemName:a})}}catch(e){return console.error(e),{error:{code:"unhandledError",message:JSON.stringify(e)}}}},m=async(e,t)=>{const r=(0,n.e)(t),a=`${r}/Get%20Database%20Connection%20String/submitJob`,o={in_inputData:e.itemID,in_connDataType:"UPLOADED_CONNECTION_FILE_ID"};try{const{jobId:e,jobStatus:t}=await(0,d.r)(a,o,{useProxy:!0},"post");if("esriJobSubmitted"===(t||"")){const a=`${r}/Get%20Database%20Connection%20String/jobs/${e}`,o=await(0,d.p)(a,{requestParams:{jobId:e,jobStatus:t},pendingStatuses:["esriJobNew","esriJobSubmitted","esriJobWaiting","esriJobExecuting"],successStatuses:["esriJobSucceeded"]});return{result:await(0,n.g)(o,r)}}return{result:null}}catch(e){return console.error(e),{error:{code:"unhandledError",message:JSON.stringify(e)}}}},f=async e=>{const t={useProxy:!0};try{const r=await(0,d.r)("https://esriresources.s3.amazonaws.com/1150/regionsforcloudstorage.dat",{},t);let a;return"amazon"===e?a=r.Amazon.regions:"azure"===e||"azuredatalakegen2store"===e?a=r.environments:"alibaba"===e?a=r.Alibaba.regions:"google"===e&&(a=r.Google.regions),{result:a}}catch(e){return console.error(e),{error:{code:"unhandledError",message:JSON.stringify(e)}}}},S=async(e,t,r)=>{var a;const s=`${t.helperServices.datastoreManagement.url}/${e}/data/validateDataItem`,n=JSON.stringify(r);try{return{result:await(0,o.r)(s,t,{body:{item:n,f:"json"},usePost:!0})}}catch(e){console.error("Data Store validation error",e);const t=[["incorrect username or password","invalidUsernameOrPassword"],["connectionUrl is invalid","invalidSnowflakeServer"],["The requested warehouse does not exist or not authorized","invalidSnowflakeWarehouse"],["The requested database does not exist or not authorized","invalidSnowflakeDatabase"],["The requested schema does not exist or not authorized","invalidSnowflakeSchema"],["specified in the connect string does not exist or not authorized","invalidSnowflakeRole"],["Could not read private key","invalidKeyFile"],["private_key","invalidKeyFile"],["has not enabled BigQuery","invalidBigQueryProjectId"],["private_key must be specified","invalidCredentials"],["JDBCConnection is invalid","invalidConnection"],["AWS Access Key ID you provided does not exist","invalidCredentials"],["The request signature we calculated does not match the signature you provided.","invalidCredentials"],["The specified bucket does not exist","invalidAWSBucket"],["No such host is known","invalidConnection"],["Server failed to authenticate the request","invalidCredentials"],["accountEndpoint must be specified","invalidConnection"],["Container","invalidAzureContainer"],["Response status code does not indicate success: 400","invalidConnection"],["Response status code does not indicate success: 401","invalidCredentials"],["Response status code does not indicate success: 403","unauthorizedCredentials"]];let r=(null===(a=JSON.stringify(e))||void 0===a?void 0:a.toLowerCase())||"",o=Array.isArray(null==e?void 0:e.details)&&e.details.length>0?e.details:void 0;for(const[e,a]of t)if(r.includes(e.toLowerCase()))return{error:{code:a,details:o}};return{error:{code:"unhandledError",details:o}}}},b=async({item:e,serverList:t,datastoreType:r,portal:a})=>{const o=await Promise.all(t.map((t=>w({item:e,server:t,datastoreType:r,portal:a}))));return t.map(((e,t)=>{var r,a,s,n,i,c;const l=o[t],d=null===(r=null==l?void 0:l.machines)||void 0===r?void 0:r[0],u=null===(a=null==d?void 0:d.dataItems)||void 0===a?void 0:a[0];return!(null==l?void 0:l.status)||"success"!==(null==l?void 0:l.status)&&(null==d?void 0:d.machine.toLowerCase())!==e.name.toLowerCase().split(":")[0]?Object.assign(Object.assign({},e),{serverStatus:"error",errorMsg:(null===(c=null==l?void 0:l.error)||void 0===c?void 0:c.message)&&JSON.parse(l.error.message).message||(null==u?void 0:u.message),error:null==u?void 0:u.error}):Object.assign(Object.assign({},e),{serverStatus:(null==l?void 0:l.status)||(null===(s=null==l?void 0:l.machines[0])||void 0===s?void 0:s.status),errorMsg:"error"===(null==d?void 0:d.status)&&(null===(n=null==l?void 0:l.error)||void 0===n?void 0:n.message)&&JSON.parse(null===(i=null==l?void 0:l.error)||void 0===i?void 0:i.message).message||(null==u?void 0:u.message),error:null==u?void 0:u.error})}))},w=async({item:e,server:t,datastoreType:r,portal:o})=>{let s,i=null;"folder"===r?s=(0,n.c)(e):"database"===r?s=(0,n.a)(e):"cloud"===r?s=(0,n.b)(e):"nosql"===r&&(s=(0,n.d)(e)),s.info.isManaged=!1;const c=`${`${(0,a.g)(o)}portals/${o.id}`}/datastores/validate`;i=!i&&e.allowServicesRestart?{datastore:JSON.stringify(s),serverId:t.id,options:JSON.stringify({allowServicesRestart:!0}),f:"json"}:Object.assign({serverId:t.id,f:"json"},{datastore:JSON.stringify(s)});try{const{status:e,machines:t}=await(0,d.r)(c,i,{},"post");return{status:e,machines:t}}catch(e){return console.error(e),{error:{code:"unhandledError",message:JSON.stringify(e)}}}},T=async e=>{let t=[],r=e;if((0,n.i)()){const e=[];r.forEach((r=>{if(r.isHosted){const e={name:r.adminUrl,type:"Linux"};t.push(e)}else"FEDERATED_SERVER"===r.serverRole&&e.push(r)}));const a=await Promise.allSettled(e.map((e=>{const t=`${e.adminUrl}/admin/machines?f=json`;return(0,d.r)(t,{},{useProxy:!0},"post")})));await Promise.allSettled(a.map((e=>{var a;return k(null===(a=null==e?void 0:e.value)||void 0===a?void 0:a.machines,r).then((e=>{t=[...t,...e]}))})))}else{const e=await Promise.allSettled(r.map((e=>{const t=`${e.adminUrl}/admin/machines?f=json`;return(0,d.r)(t,{},{useProxy:!0},"post")})));await Promise.allSettled(e.map((e=>{var a;return P(null===(a=null==e?void 0:e.value)||void 0===a?void 0:a.machines,r).then((e=>{r=[...e.serverList],t=e.serverTypes}))})))}return{servers:r,serverTypes:t}},P=async(e,t)=>{let r=[];t.map(((t,r)=>{(null==e?void 0:e[r])?t.shouldFilter=!1:t.shouldFilter=!0})),t.filter((e=>!e.shouldFilter));for(let a=0;a<t.length;a++){const o=e[0].machineName,s=`${e[0].adminURL}/machines/${o}?f=json`;await(0,d.r)(s,{},{useProxy:!0},"post").then((e=>{if(e){const o={name:t[a].adminUrl,type:e.platform.indexOf("Windows")>-1?"Windows":"Linux"};r.push(o)}}))}return{serverTypes:r,serverList:t}},k=async(e,t)=>{let r=[];return await Promise.all(t.map(((a,o)=>{if(!a.isHosted){const a=e[0].machineName,s=`${e[0].adminURL}/machines/${a}?f=json`;return(0,d.r)(s,{},{},"post").then((e=>{if(!e.isHosted){const a={name:t[o].adminUrl,type:e.platform.indexOf("Windows")>-1?"Windows":"Linux"};r.push(a)}}))}}))),r},j=async(e,t,r,o,i)=>{const l=e.addDataStoreType,u={type:"Data Store",title:t,tags:r,categories:o,snippet:i,text:"",typeKeywords:e.typeKeywords};let p;"folder"===l?p=(0,n.c)(e,t):"database"===l?p=(0,n.a)(e,t):"cloud"===l?p=(0,n.b)(e,t):"nosql"===l&&(p=(0,n.d)(e,t)),p.info.isManaged=!1,u.text=JSON.stringify(p);let y=await(0,c.y)(u,null);return y.success&&s.c.portal.isPortal&&(y=await(async(e,t)=>{const{portal:r}=s.c,o=`${(0,a.g)(r)}portals/${r.id}`,i=t.dataStoreSelectedServers,c=await Promise.all(i.map((r=>{const a={serverId:r,datastoreId:e.id};(0,n.i)()&&"folder"===t.addDataStoreType&&t.allowServicesRestart&&(a.options=JSON.stringify({allowServicesRestart:!0}));const s=`${o}/datastores/addToServer`;return(0,d.r)(s,a,{},"post")})));let l={success:!1,id:null,folder:null};for(const r of c)r.success&&["folder","database","nosql","cloud"].includes(t.addDataStoreType)&&(l={success:!0,id:e.id,folder:e.id});return l})(y,e)),y},D=async e=>{const t=`${(0,a.g)(e)}search?q=type%3A'Data+Store'&bbox=&sortField=&sortOrder=`;let r=[],o=[];try{const s=await(0,d.r)(t);return(null==s?void 0:s.total)&&(r=s.results),Promise.all(r.map((async t=>{const r=`${(0,a.g)(e)}content/items/${t.id}/data`;await(0,d.r)(r).then((e=>{o.push(e)}))}))),{result:o}}catch(e){return console.error(e),{error:{code:"unhandledError",message:JSON.stringify(e)}}}},C=(e,t,r,a)=>a.some((a=>{const o=a.info.connectionProperties;if(o)return o.connectionUri===e&&o.database===t&&o.username===r}))},68194:(e,t,r)=>{r.d(t,{r:()=>s});var a=r(50637),o=r(59317);const s=async(e,t,r={})=>{const{body:s,usePost:n,addTokenManually:i,api:c=(null===o.c||void 0===o.c?void 0:o.c.api),customToken:l}=r,d=new URLSearchParams;s&&Object.entries(s).forEach((([e,t])=>{void 0!==t&&d.append(e,t)}));const u=new URL(e);if(u.searchParams.append("f","json"),l)u.searchParams.append("token",l);else{const e=!1===i?null:await(0,a.b)(t,c);e&&u.searchParams.append("token",e)}const p=await fetch(u.toString(),{body:n?d:void 0,method:n?"POST":"GET"}),y=await p.json(),h=y.error;if(h)throw"string"==typeof h?new Error(h):h;return y}}}]);