/*! For license information please see arcgis_analysis_node_modules_arcgis_map-config-components_dist_esm-38ef1f.js.LICENSE.txt */
"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_map-config-components_dist_esm-38ef1f"],{10465:(e,t,i)=>{i.d(t,{D:()=>n,a:()=>h,b:()=>r,c:()=>o,g:()=>y,s:()=>P});class n{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const a=(e,t,i)=>(0,l(t).subscribe)((t=>{const n=t.some((t=>((e,t)=>{let i=e;for(;i;){if(i===t)return!0;if(!i.parentNode)return!1;i=i.parentNode instanceof ShadowRoot?i.parentNode.host:i.parentNode}return!1})(e,t.target)));n&&i()})),s={},l=e=>{const t=e.join(","),i=s[t];if(void 0!==i)return i;const n=new Set,a=new MutationObserver((e=>n.forEach((t=>t(e)))));globalThis.document&&a.observe(document.documentElement,{attributes:!0,attributeFilter:e,subtree:!0});const l={subscribe:e=>(n.add(e),()=>{n.delete(e),0===n.size&&(a.disconnect(),s[t]=void 0)})};return s[t]=l,l},o=(e,t)=>{let i=e;for(;i;){const e=i.closest?.(t);if(e)return e;const n=i.getRootNode?.();if(n===globalThis.document)return null;i=n.host}return null},r=e=>d(e,"dir","ltr"),d=(e,t,i)=>{const n=o(e,`[${t}]`);return n?.getAttribute(t)??i},c=e=>{let t="";for(let i=0;i<e;i++)t+=(65536*(1+Math.random())|0).toString(16).substring(1);return t},h=()=>[c(2),c(1),c(1),c(1),c(3)].join("-"),p="ar,bg,bs,ca,cs,da,de,el,en,es,et,fi,fr,he,hr,hu,id,it,ja,ko,lt,lv,nl,nb,no,pl,pt-BR,pt-PT,ro,ru,sk,sl,sr,sv,th,tr,uk,vi,zh-CN,zh-HK,zh-TW".split(","),u=new Set(p),f="en",m={pt:"pt-PT",nb:"no",nn:"no",zh:"zh-CN"},b={},g=async(e,t)=>{const i=`${t}${e}.json`;try{const e=await fetch(i);if(e.ok)return await e.json()}catch(e){return console.error(e),{}}return e===f?{}:await g(f,t)},y=e=>{const t=d(e,"lang",globalThis.navigator?.language||f);return{lang:t,t9nLocale:E(t)}},E=e=>{const[t,i]=e.split("-"),n=t.toLowerCase();let a=n;return i&&(a=`${n}-${i.toUpperCase()}`),a=m[a]??a,u.has(a)?a:i?E(n):f},P=(e,t,i,n)=>{let s;const l=()=>N(e,t(),n).then((e=>{s?.lang===e.lang&&s.t9nLocale===e.t9nLocale&&s.t9nStrings===e.t9nStrings||i(e),s=e})).catch(console.error);return queueMicrotask(l),a(e,["lang"],l)},N=async(e,t,i=e.localName.split("-").slice(1).join("-"))=>{const{lang:n,t9nLocale:a}=y(e),s=`${t}/${i}/t9n`,l=null===i?{}:await(async(e,t,i="")=>{const n=`${t}/${i}`,a=`${n}${e}.json`;return b[a]??(b[a]=g(e,n)),await b[a]})(a,s,"messages.");return{lang:n,t9nLocale:a,t9nStrings:l}}},20057:(e,t,i)=>{function n(e){return`// To configure a time series visualization using this template, data for this layer should be structured so that\n// each row represents a static feature with a fixed location, such as a country boundary or a city location.\n// The attribute table should have two or more fields that represent the same data attributes at different points in time for each feature.\n// Field names should refer to a specific attribute and a specific point in time, such as population in a specific year.\n// e.g. POP1990, POP2000, POP2010, POP2020, POP2030\n\n// There are four areas of this template where modification is necessary for the template to work with your layer\n// Two are required, and two are optional. \n\n// Examine your data and the details below to edit the template accordingly.\n\nvar FIELD_NAME_PATTERN = "POP{Y}"; // Required - Update this to match your data. See Lines 17-49 for details.\nExpects($feature, "POP*"); // Required - Update this to match your data. See Lines 51-63 for details.\nvar DEFAULT_FIELD_NAME = ""; // Optional - See Lines 65-79 for details.\nvar RESULT_FORMAT_PATTERN = "${e?.resultFormatPattern??"#,###.00"}"; // Optional - Update this to match your data. See Lines 81-93 for details.\n\n// FIELD_NAME_PATTERN\n//\n// The field name pattern is used to create the field name from the time slider values.\n// Patterns are defined using the following syntax: fieldName{pattern}\n//\n// EXAMPLE 1: given fields with names Cases_2023_10_01, Cases_2023_10_02, Cases_2023_10_03, etc., the field name pattern would be:\n// var FIELD_NAME_PATTERN = "Cases_{Y_MM_DD}";\n//\n// EXAMPLE 2: given fields with names POP2000, POP2010, POP2020, etc., the field name pattern would be:\n// var FIELD_NAME_PATTERN = "POP{Y}";\n//\n// The following patterns are supported:\n//\n// D: Day of the month, not padded (1 - 31)\n// DD: Day of the month, padded (01 - 31)\n// DDD: Ordinal day of the year (1 - 365)\n// d: Day of the week (1 - 7)\n// ddd: Abbreviated day of the week (e.g. Mon)\n// dddd: Full day of the week (e.g. Monday)\n// M: Month number (1 - 12)\n// MM: Month number, padded (01 - 12)\n// MMM: Abbreviated month name (e.g. Jan)\n// MMMM: Full month name (e.g. January)\n// Y: Full year\n// YY: Two-digit year\n// h: Civilian hours, not padded (1 - 12)\n// hh: Civilian hours, padded (01 - 12)\n// H: Military hours, not padded (0 - 23)\n// HH: Military hours, padded (00 - 23)\n// m: Minutes, not padded (0 - 59)\n// mm: Minutes, padded (00 - 59)\n// s: Seconds, not padded (0 - 59)\n// ss: Seconds, padded (00 - 59)\n\n// EXPECTS\n//\n// Copy and paste the part of the field pattern common to all fields\n// followed by an asterisk (*) into the second parameter of the Expects function.\n// This must be a raw text value like "POP*", not a variable name like FIELD_NAME_PATTERN.\n// \n// EXAMPLE 1: given fields with names Cases_2023_10_01, Cases_2023_10_02, Cases_2023_10_03, etc.\n//   - Expects($feature, \u201cCases_*\u201d);  // includes all fields that start with "Cases_"\n//   - Expects($feature, \u201cCases_2023*\u201d); // includes all Cases fields for the year 2023\n// \n// EXAMPLE 2: given fields with names POP2000, POP2010, POP2020, etc.\n//   - Expects($feature, "POP*"); // includes all fields that start with "POP"\n//   - Expects($feature, "POP2*"); // includes all "POP" fields for all years after 2000\n\n// DEFAULT_FIELD_NAME\n//\n// The field name to return if the time slider is closed.\n// Suggested values might include the first field in the time series,\n// the most recent field in the time series, or possibly an\n// aggregated value, such as TOTAL_POPULATION.\n// \n// EXAMPLE 1: The first field in the time series. Given fields with names POP2000, POP2010, POP2020, TOTAL_POPULATION,\n// var DEFAULT_FIELD_NAME = "POP2000";\n//\n// EXAMPLE 2: An aggregated value such as the total population. Given fields with names POP2000, POP2010, POP2020, TOTAL_POPULATION,\n// var DEFAULT_FIELD_NAME = "TOTAL_POPULATION";\n//\n// Note - If you defined a default field, be sure to include it in the Expects function as a third parameter.\n// e.g. Expects($feature, "POP*", "TOTAL_POPULATION");\n\n// RESULT_FORMAT_PATTERN\n//\n// The result format pattern is used to format the result of the calculation.\n// Patterns are defined using the following syntax: #,###.00\n// This should only be defined for formatting numeric values in labels or popups.\n// If using for symbology/layer styles, or the field data type\n// is a string, then leave this value empty.\n//\n// EXAMPLE 1: if returning a numeric value in a label,\n// var RESULT_FORMAT_PATTERN = "#,###"; // formats the value with commas and rounded to nearest integer\n// \n// EXAMPLE 2: if returning a numeric value in a popup,\n// var RESULT_FORMAT_PATTERN = "#,###.00"; // formats the value with commas and two decimal places\n\nfunction fieldsWithPatternFilter(field) {\n  var prefix = Front(Split(FIELD_NAME_PATTERN, "{"));\n  var suffix = Back(Split(FIELD_NAME_PATTERN, "}"));\n  var patternToFind = DefaultValue(prefix, suffix);\n  return Find(patternToFind, field.name) > -1;\n}\n\nfunction fieldsWithPatternMap(field) {\n  return field.name;\n}\n\nfunction getAllFieldsFromPattern() {\n  var fields = Schema($feature).fields;\n  return Sort(\n    Map(Filter(fields, fieldsWithPatternFilter), fieldsWithPatternMap)\n  );\n}\n\nfunction getFieldNameFromTimeProperties(dateValue, pattern) {\n  var fieldName = pattern;\n\n  var startPosition = Find("{", fieldName);\n  while (startPosition > -1) {\n    var startIndex = Find("{", fieldName, startPosition);\n    var endIndex = Find("}", fieldName, startIndex);\n    var searchText = Mid(fieldName, startIndex, endIndex - startIndex + 1);\n    var dateText = Text(dateValue, searchText);\n    fieldName = Replace(fieldName, searchText, dateText);\n    startPosition = Find("{", fieldName, endIndex);\n  }\n  fieldName = Replace(Replace(fieldName, "{", ""), "}", "");\n  return fieldName;\n}\n\nvar hasCurrentStart = HasValue($view, ["timeProperties", "currentStart"]);\nvar hasCurrentEnd = HasValue($view, ["timeProperties", "currentEnd"]);\n\nvar hasTimeProperties = hasCurrentStart || hasCurrentEnd;\n\nif (!hasTimeProperties) {\n  if (!IsEmpty(DEFAULT_FIELD_NAME) && HasKey($feature, DEFAULT_FIELD_NAME)) {\n    return $feature[DEFAULT_FIELD_NAME];\n  }\n  var firstField = Front(getAllFieldsFromPattern());\n  return $feature[firstField];\n}\n\nvar currentValue = DefaultValue(\n  $view.timeProperties.currentEnd,\n  $view.timeProperties.currentStart\n);\n\nfunction getValueAtInstant() {\n  var fieldName = getFieldNameFromTimeProperties(\n    currentValue,\n    FIELD_NAME_PATTERN\n  );\n  if (HasValue($feature, fieldName)) {\n    var value = $feature[fieldName];\n    return value;\n  }\n  return null;\n}\n\nfunction formatResult(value) {\n  if (IsEmpty(value)) {\n    return null;\n  }\n  if (IsEmpty(RESULT_FORMAT_PATTERN)) {\n    return value;\n  }\n  return Text(value, RESULT_FORMAT_PATTERN);\n}\n\nvar result = getValueAtInstant();\nreturn formatResult(result);`}i.d(t,{g:()=>n})},44735:(e,t,i)=>{function n(e,t){if(!e||!t)return;let i=t.assetsPath;i.endsWith("/")||(i+="/"),e?.firstElementChild?.insertAdjacentHTML("beforebegin",`<link rel="stylesheet" href="${i}esri/themes/light/main.css" />`)}i.d(t,{i:()=>n})},71099:(e,t,i)=>{i.r(t),i.d(t,{arcgis_label_content:()=>p});var n=i(11254),a=i(69811),s=i(10465),l=i(56612),o=i(17840),r=i(44735),d=i(74973),c=i(14528),h=i(20057);const p=class{constructor(e){(0,n.r)(this,e),this.arcgisChange=(0,n.c)(this,"arcgisChange",7),this.arcgisDuplicate=(0,n.c)(this,"arcgisDuplicate",7),this.arcgisDelete=(0,n.c)(this,"arcgisDelete",7),this.arcgisDisablePanel=(0,n.c)(this,"arcgisDisablePanel",7),this.manager=(0,c.u)(this),this.aggregationExpressionMapping=new Map,this.mapView=void 0,this.layer=void 0,this.portal=void 0,this.strings=void 0,this.layerDisplayType=l.l.feature,this.serviceType=void 0,this.calciteFlowItem=void 0,this.labelClass=void 0,this.blockOpen=!1}async componentWillLoad(){await this.loadAllModules();const{layer:e,layerDisplayType:t}=this;this.popupTemplate=t===l.l.feature?e.popupTemplate:e.featureReduction.popupTemplate,this.labelFields=await this.getLabelFields(),t===l.l.cluster&&await Promise.all(this.labelFields.map((async e=>await this.getLabelsForAggregationExpressions(e.name))))}async componentDidLoad(){const e=await(0,a.j)();(0,r.i)(this.el.shadowRoot,e)}componentDidUpdate(){this.arcgisChange.emit()}disconnectedCallback(){this.labelRenameFormNode&&document.body.removeChild(this.labelRenameFormNode),this.fieldPickListNode&&document.body.removeChild(this.fieldPickListNode),this.labelContentFilterNode&&document.body.removeChild(this.labelContentFilterNode),this.labelStyleNode&&document.body.removeChild(this.labelStyleNode)}async setFocus(){const{blockOpen:e}=this;e&&(this.mapConfigBlockOptionsNode.scrollIntoView({behavior:"smooth",block:"nearest",inline:"start"}),this.mapConfigBlockOptionsNode.setFocus())}async closeAllPopovers(){this.closePopovers()}render(){const{strings:e,labelClass:t,blockOpen:i}=this;return(0,n.h)(n.H,{key:"35003030c801f0119b7dfb3ce2d3dc40718f9c48"},(0,n.h)("calcite-block",{key:"0b6ba5c16e44cfb9d8bb2f8783800588279868f0",dir:(0,s.b)(this.el),heading:t.name||this.getDisplayFieldName()||e.label,open:i,collapsible:!0,onCalciteBlockToggle:()=>this.closePopovers()},(0,n.h)("div",{key:"373cb9ce28515767dde73ce4421baa994c472b55",slot:"control"},this.renderControls()),(0,n.h)("calcite-icon",{key:"aeef332b4d9ba8c2a2328de905277dc3d795d88b",slot:"icon",icon:"label"}),this.renderField(),this.renderFilter(),this.renderStyle(),this.renderSlider()))}renderControls(){return(0,n.h)("arcgis-map-config-block-options",{ref:e=>this.mapConfigBlockOptionsNode=e,options:{hasDelete:!0,hasDuplicate:!0,hasRename:!0},onArcgisDelete:e=>{e.stopPropagation(),this.arcgisDelete.emit()},onArcgisDuplicate:e=>{e.stopPropagation(),this.arcgisDuplicate.emit()},onArcgisRename:()=>{this.closePopovers(),this.labelRenameFormNode||this.openRenameForm()}})}renderField(){const{strings:e,layer:t,labelClass:i,serviceType:a}=this,s=d.s.includes(a)||a===l.s.mapImage&&t.layer.capabilities?.exportMap?.supportsArcadeExpressionForLabeling;return(0,n.h)("calcite-label",null,e.labelAttribute,(0,n.h)("div",{class:"field-expression-div"},(0,n.h)("button",{ref:e=>this.attributesButtonNode=e,class:(s?"non-simple-field-button":"simple-field-button")+" label-content-button",title:e.field,onClick:e=>{e.stopPropagation(),this.openFieldPickList()}},(0,n.h)("span",{class:"label-content-button-text"},this.getDisplayFieldName()||i.labelExpressionInfo?.title||e.newExpression),(0,n.h)("span",{class:"label-content-button-icon"},(0,n.h)("calcite-icon",{scale:"s",icon:"chevron-down"}))),s&&(0,n.h)("calcite-action",{ref:e=>this.arcadeButtonNode=e,scale:"s",text:e.expression,onClick:e=>{e.stopPropagation(),this.openArcadeEditor()}},(0,n.h)("calcite-icon",{scale:"s",icon:"code"}))))}renderFilter(){const{strings:e,serviceType:t}=this;return t===l.s.ogcFeature||t===l.s.parquet||t===l.s.wfs||t===l.s.subtype?(0,n.h)(n.F,null):(0,n.h)("calcite-label",null,e.filter,(0,n.h)("button",{ref:e=>this.filterButtonNode=e,class:"label-content-button",title:e.editLabelFilter,onClick:e=>{e.stopPropagation(),this.closePopovers(),this.labelContentFilterNode||this.openFilter()}},(0,n.h)("span",{class:"label-content-button-text"},e.editLabelFilter),(0,n.h)("span",{class:"label-content-button-icon"},(0,n.h)("calcite-icon",{scale:"s",icon:"chevron-down"}))))}renderStyle(){const{strings:e}=this;return(0,n.h)("calcite-label",null,e.labelStyle,(0,n.h)("button",{ref:e=>this.styleButtonNode=e,class:"label-content-button",title:e.editLabelStyle,onClick:e=>{e.stopPropagation(),this.openLabelStyleNode()}},(0,n.h)("span",{class:"label-content-button-text"},e.editLabelStyle),(0,n.h)("span",{class:"label-content-button-icon"},(0,n.h)("calcite-icon",{scale:"s",icon:"chevron-down"}))))}renderSlider(){const{strings:e}=this;return(0,n.h)("calcite-label",null,e.visibleRange,(0,n.h)("div",{ref:e=>{e&&this.addScaleRangeSlider(e)}}))}async loadAllModules(){const[e,t,i,n]=await Promise.all([(0,a.j)(),(0,a.d)(),(0,a.c)(),(0,a.aH)()]);this.modules={config:e,binLabelCreator:t,clusterLabelCreator:i,ScaleRangeSlider:n}}async getLabelFields(){const{layer:e,popupTemplate:t,layerDisplayType:i}=this;if(i===l.l.feature){const i=await(0,o.c)(e);if(t?.fieldInfos){let e=[];return i.filter((e=>["string","small-integer","big-integer","integer","single","double","long","date","date-only","time-only","timestamp-offset","oid","guid","global-id"].includes(e.type))).forEach((i=>{e=[...e,i.clone()];const n=t.fieldInfos.find((e=>e.fieldName===i.name));n&&(e[e.length-1].alias=n.label)})),e}return i}return(0,o.j)(t,!1)}async getLabelsForAggregationExpressions(e){const{modules:t,mapView:i,layer:n}=this;let a;a="binning"===n.featureReduction?.type?await t.binLabelCreator.getLabelSchemes({layer:n,field:e}):await t.clusterLabelCreator.getLabelSchemes({layer:n,renderer:n?.renderer,view:i,field:e});[a?.primaryScheme,...a?.secondarySchemes??[]].forEach((e=>{e&&this.aggregationExpressionMapping.set(e?.fieldName,e?.labelingInfo?.[0]?.labelExpressionInfo?.expression??"")}))}getDisplayFieldName(){const{layerDisplayType:e,labelClass:t,labelFields:i}=this,n=e===l.l.cluster?this.getFieldNameFromAggregationExpression():t.getLabelExpressionSingleField(),a=i.find((e=>e.name===n));return a?.alias||n}openRenameForm(){const{strings:e,labelClass:t}=this;this.labelRenameFormNode=document.createElement("arcgis-label-rename-form"),this.labelRenameFormNode.strings=e,this.labelRenameFormNode.refElement=this.el,this.labelRenameFormNode.currentLabelName=t.name||this.getDisplayFieldName()||e.label,document.body.appendChild(this.labelRenameFormNode),this.arcgisDisablePanel.emit(!0),this.labelRenameFormNode.addEventListener("arcgisChange",(e=>{e.stopPropagation(),this.closePopovers();const i=e.detail;i&&(t.name=i,(0,n.f)(this.el))}))}async openFieldPickList(){const{mapView:e,layer:t,labelClass:i,labelFields:n,layerDisplayType:a,calciteFlowItem:s}=this;if(this.closePopovers(),this.calciteFlowItem.loading=!0,!this.fieldPickListNode){this.fieldPickListNode=document.createElement("arcgis-field-pick-list"),this.fieldPickListNode.popoverProps={triggerDisabled:!0,refElement:s,offsetSkidding:50},this.fieldPickListNode.fields=n,this.fieldPickListNode.layer=t,this.fieldPickListNode.mapView=e,this.fieldPickListNode.showFieldInfo=a===l.l.feature;const o=i.getLabelExpressionSingleField()||this.getFieldNameFromAggregationExpression();this.fieldPickListNode.selectedFields=o?[o]:[],this.fieldPickListNode.addEventListener("arcgisClose",(e=>{e.stopPropagation();const t=e.detail?.selectedFields?.[0];this.handleFieldPickListChange(t)})),document.body.appendChild(this.fieldPickListNode),this.fieldPickListNode.setFocus(),this.arcgisDisablePanel.emit(!0)}this.calciteFlowItem.loading=!1}getFieldNameFromAggregationExpression(){const{labelClass:e,layerDisplayType:t}=this;if(t===l.l.cluster)for(const[t,i]of this.aggregationExpressionMapping)if(i===e?.labelExpressionInfo?.expression)return t}handleFieldPickListChange(e){const{layer:t,labelClass:i,layerDisplayType:a,serviceType:s}=this;if(e){if(s===l.s.mapImage)i.labelExpression=`[${e}]`;else if(a===l.l.cluster)if(this.aggregationExpressionMapping.has(e))i.labelExpressionInfo.expression=this.aggregationExpressionMapping.get(e);else for(const[t,n]of this.aggregationExpressionMapping)t===e&&(i.labelExpressionInfo.expression=n);else{const n=t.fields.find((t=>t.name===e));i.labelExpressionInfo="coded-value"===n?.domain?.type?{expression:`$feature["${e}"]\nDomainName($feature, "${e}")`,title:void 0}:{expression:`$feature["${e}"]`,title:void 0}}(0,n.f)(this.el)}this.closePopovers()}openFilter(){const{strings:e,mapView:t,layer:i,labelClass:a,layerDisplayType:s,calciteFlowItem:l}=this;this.labelContentFilterNode=document.createElement("arcgis-label-content-filter"),this.labelContentFilterNode.referenceElement=l,this.labelContentFilterNode.labelClass=a,this.labelContentFilterNode.strings=e,this.labelContentFilterNode.layer=i,this.labelContentFilterNode.mapView=t,this.labelContentFilterNode.layerDisplayType=s,document.body.appendChild(this.labelContentFilterNode),this.arcgisDisablePanel.emit(!0),this.labelContentFilterNode.addEventListener("arcgisChange",(e=>{e.stopPropagation(),(0,n.f)(this.el)})),this.labelContentFilterNode.addEventListener("arcgisClose",(e=>{e.stopPropagation(),this.closePopovers()}))}openLabelStyleNode(){const{strings:e,mapView:t,layer:i,labelClass:a,portal:s,layerDisplayType:l,serviceType:o,calciteFlowItem:r}=this;this.closePopovers(),this.labelStyleNode||(this.labelStyleNode=document.createElement("arcgis-label-content-style"),this.labelStyleNode.view=t,this.labelStyleNode.referenceElement=r,this.labelStyleNode.labelClass=a,this.labelStyleNode.strings=e,this.labelStyleNode.layer=i,this.labelStyleNode.portal=s,this.labelStyleNode.layerDisplayType=l,this.labelStyleNode.serviceType=o,document.body.appendChild(this.labelStyleNode),this.arcgisDisablePanel.emit(!0),this.labelStyleNode.addEventListener("arcgisChange",(e=>{e.stopPropagation(),(0,n.f)(this.el)})),this.labelStyleNode.addEventListener("arcgisClose",(e=>{e.stopPropagation(),this.closePopovers()})))}async openArcadeEditor(){const{strings:e,layer:t,portal:i,labelClass:n}=this;if(this.closePopovers(),!this.arcadeEditorNode){if(this.calciteFlowItem.disabled=!0,this.arcadeEditorNode=document.createElement("arcgis-map-config-modal-arcade"),this.arcadeEditorNode.arcadeScript=n.labelExpressionInfo?.expression||"",this.arcadeEditorNode.arcadeProfile=this.getArcadeProfile(),this.arcadeEditorNode.testData=await this.getArcadeTestData(),document.URL.includes("/mapviewer/")){const t=[{label:e.timeSeries,description:e.timeSeriesDescription,code:(0,h.g)()}];this.arcadeEditorNode.suggestions=[{label:e.suggestions,suggestions:t}]}this.arcadeEditorNode.layer=t,this.arcadeEditorNode.portal=i,this.arcadeEditorNode.arcadeTitle=n.labelExpressionInfo?.title||e.newExpression,this.arcadeEditorNode.arcadeTitleEditable=!0,this.arcadeEditorNode.arcadeTitleEditingEnabled=!n.labelExpressionInfo?.title,this.arcadeEditorNode.returnPredictOutputType=!1,this.arcadeEditorNode.addExistingExpressions=!0,document.body.appendChild(this.arcadeEditorNode),this.arcadeEditorNode.addEventListener("arcgisClose",(e=>this.arcadeSetup(e.detail)))}}getArcadeProfile(){const{layer:e,popupTemplate:t,layerDisplayType:i}=this;return{id:"labeling",definitions:{$feature:i===l.l.cluster?{fields:(0,o.j)(t,!1)}:e}}}async getArcadeTestData(){const{mapView:e,layer:t,popupTemplate:i,layerDisplayType:n}=this;try{if(n===l.l.cluster)return{profileVariableInstances:{$feature:await(0,o.k)(e,t,i),$view:{scale:"scale"in e?e.scale:void 0,timeProperties:e.timeExtent?{currentStart:e.timeExtent.start,currentEnd:e.timeExtent.end,startIncluded:!0,endIncluded:!0}:void 0}},spatialReference:e.spatialReference,timeZone:e.timeZone};let a;return a="subtype-sublayer"===t.type?t.parent.url:t.url,{profileVariableInstances:{$feature:(await(0,o.l)(t,e)).features[0],$layer:t,$map:e.map,$view:{scale:"scale"in e?e.scale:void 0,timeProperties:e.timeExtent?{currentStart:e.timeExtent.start,currentEnd:e.timeExtent.end,startIncluded:!0,endIncluded:!0}:void 0},$datastore:a},spatialReference:e.spatialReference,timeZone:e.timeZone}}catch(e){console.log(e)}}arcadeSetup(e){const{labelClass:t}=this;e&&(t.labelExpressionInfo?.expression?(t.labelExpressionInfo.expression=e.script,t.labelExpressionInfo.title=e.title):t.labelExpressionInfo={expression:e.script,title:e.title},(0,n.f)(this.el)),this.calciteFlowItem.disabled=!1,this.arcadeEditorNode&&(document.body.removeChild(this.arcadeEditorNode),this.arcadeEditorNode=void 0),this.arcadeButtonNode?.setFocus()}addScaleRangeSlider(e){const{modules:t,mapView:i,portal:a,labelClass:s,scaleRangeSlider:l}=this;l||(this.scaleRangeSlider=new t.ScaleRangeSlider({view:i,region:a.region||"wo",minScale:s.minScale||0,maxScale:s.maxScale||0,container:e}),this.scaleRangeSlider.watch(["minScale","maxScale"],((e,t,i)=>{"minScale"===i?s.minScale=e:"maxScale"===i&&(s.maxScale=e),this.closePopovers(),(0,n.f)(this.el)})))}closePopovers(){this.labelRenameFormNode&&(document.body.removeChild(this.labelRenameFormNode),this.labelRenameFormNode=void 0,this.mapConfigBlockOptionsNode?.setFocus()),this.fieldPickListNode&&(document.body.removeChild(this.fieldPickListNode),this.fieldPickListNode=void 0,this.attributesButtonNode?.focus()),this.labelContentFilterNode&&(document.body.removeChild(this.labelContentFilterNode),this.labelContentFilterNode=void 0,this.filterButtonNode?.focus()),this.labelStyleNode&&(document.body.removeChild(this.labelStyleNode),this.labelStyleNode=void 0,this.styleButtonNode?.focus()),this.mapConfigBlockOptionsNode?.closeDropdown(),this.arcgisDisablePanel.emit(!1)}get el(){return(0,n.a)(this)}};p.style=".field-expression-div {\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  border: 1px solid var(--calcite-color-foreground-3);\n  border-radius: var(--calcite-border-width-md);\n}\n\n.field-expression-div calcite-action {\n  flex: 0 0 auto;\n}\n\n.label-content-button {\n  background: var(--calcite-color-foreground-1);\n  border: 1px solid var(--calcite-color-foreground-3);\n  border-radius: var(--calcite-border-width-md);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--calcite-spacing-sm) var(--calcite-spacing-xxs);\n  cursor: pointer;\n  width: 100%;\n  text-align: unset;\n  transition:\n    background-color 75ms ease-in-out,\n    border-color 75ms ease-in-out;\n}\n\n.label-content-button:hover {\n  background-color: var(--calcite-color-foreground-3);\n  border-color: var(--calcite-color-border-3);\n}\n\n.non-simple-field-button {\n  width: calc(100% - 32px);\n  border: none;\n  border-radius: 0;\n  border-right: 1px solid var(--calcite-color-foreground-3);\n}\n\n.simple-field-button {\n  border: none;\n}\n\n.label-content-button-text {\n  font-family: var(--calcite-font-family);\n  font-size: var(--calcite-font-size);\n  flex: 0 1 auto;\n  overflow: hidden;\n  padding: 0 var(--calcite-spacing-xxs);\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.label-content-button-icon {\n  flex: 0 0 0%;\n  padding: 0 var(--calcite-spacing-sm);\n}\n\n.esri-scale-range-slider {\n  min-width: 100%;\n}\n\n:dir(rtl) {\n  .non-simple-field-button {\n    border-left: 1px solid var(--calcite-color-foreground-3);\n    border-right: 0;\n  }\n}\n"},74973:(e,t,i)=>{i.d(t,{o:()=>a,s:()=>n});const n=["csv","feature","geojson","oriented-imagery","stream","subtype","wfs","knowledge-graph-sublayer"],a={minOffsetX:-20,minOffsetY:-20,maxOffsetX:20,maxOffsetY:20}}}]);