System.register(["jimu-core","jimu-ui","jimu-ui/advanced/setting-components","jimu-ui/advanced/data-source-selector","jimu-arcgis","jimu-core/react"],(function(e,t){var s={},i={},a={},o={},r={},n={};return{setters:[function(e){s.AllDataSourceTypes=e.AllDataSourceTypes,s.FormattedMessage=e.FormattedMessage,s.Immutable=e.Immutable,s.React=e.React,s.SessionManager=e.SessionManager,s.css=e.css,s.esri=e.esri,s.getAppStore=e.getAppStore,s.jsx=e.jsx,s.polished=e.polished},function(e){i.Alert=e.Alert,i.Checkbox=e.Checkbox,i.ImageWithParam=e.ImageWithParam,i.Label=e.Label,i.Radio=e.Radio,i.Switch=e.Switch,i.defaultMessages=e.defaultMessages},function(e){a.LayerSetting=e.LayerSetting,a.MapWidgetSelector=e.MapWidgetSelector,a.SettingRow=e.SettingRow,a.SettingSection=e.SettingSection,a.getAllItemsInMapView=e.getAllItemsInMapView},function(e){o.DataSourceSelector=e.DataSourceSelector},function(e){r.JimuMapViewComponent=e.JimuMapViewComponent,r.MapViewManager=e.MapViewManager},function(e){n.createRef=e.createRef}],execute:function(){e((()=>{var e={13089:e=>{"use strict";e.exports=o},14321:e=>{"use strict";e.exports=i},62686:e=>{"use strict";e.exports=r},68972:e=>{"use strict";e.exports=n},79244:e=>{"use strict";e.exports=s},79298:e=>{"use strict";e.exports=a}},t={};function l(s){var i=t[s];if(void 0!==i)return i.exports;var a=t[s]={exports:{}};return e[s](a,a.exports,l),a.exports}l.d=(e,t)=>{for(var s in t)l.o(t,s)&&!l.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},l.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),l.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.p="";var p={};return l.p=window.jimuConfig.baseUrl,(()=>{"use strict";l.r(p),l.d(p,{__set_webpack_public_path__:()=>u,default:()=>d});var e=l(79244),t=l(14321),s=l(79298),i=l(13089);class a extends e.React.PureComponent{constructor(t){super(t),this.unmount=!1,this.setMapThumbUrl=t=>{if(t||this.setState({mapThumbUrl:null}),this.props.portUrl&&this.props.portUrl!==(0,e.getAppStore)().getState().portalUrl)e.esri.restPortal.searchItems({q:`id:${t}`,portal:this.props.portUrl+"/sharing/rest"}).then((e=>{if(!this.unmount)if(e.results[0]){const t=`${this.props.portUrl}/sharing/rest/content/items/${e.results[0].id}/info/${e.results[0].thumbnail}`;this.setState({mapThumbUrl:t})}else this.setState({mapThumbUrl:null})}));else{const s=(0,e.getAppStore)().getState().portalUrl,i=e.SessionManager.getInstance().getSessionByUrl(s);e.esri.restPortal.searchItems({q:`id:${t}`,authentication:e.SessionManager.getInstance().getSessionByUrl(s),portal:s+"/sharing/rest"}).then((e=>{if(!this.unmount)if(e.results[0]){const t=`${s}/sharing/rest/content/items/${e.results[0].id}/info/${e.results[0].thumbnail}?token=${null==i?void 0:i.token}`;this.setState({mapThumbUrl:t})}else this.setState({mapThumbUrl:null})}))}},this.state={mapThumbUrl:null}}componentDidMount(){this.unmount=!1,this.setMapThumbUrl(this.props.mapItemId)}componentDidUpdate(e,t){e.mapItemId!==this.props.mapItemId&&this.setMapThumbUrl(this.props.mapItemId)}componentWillUnmount(){this.unmount=!0}render(){return this.state.mapThumbUrl?e.React.createElement(t.ImageWithParam,{imageParam:{url:this.state.mapThumbUrl}}):e.React.createElement(t.ImageWithParam,{imageParam:{}})}}var o=l(62686),r=l(68972);const n=Object.assign({},{sourceLabel:"Source",sourceDescript:"A web map or web scene, or any combination of the two.",goto:"Zoom to",layerTransparency:"Adjust layer transparency",information:"View layer details",setVisibility:"Toggle layer visibility",showOrHideLabels:"Show or hide labels",showLayerForMap:"Show layers for map data only",customizeLayerDesc:"Select the layers to display for users.",enableLegend:"Show legend",showAllLegend:"Show legend for all visible layers by default",useTickBoxes:"Use tick boxes to control layer visibility",reorderLayers:"Reorder layers",searchLayers:"Search layers",showTables:"Show tables",popup:"Enable or disable pop-up",customizeDescription:"Specify which layers will be displayed for each map",expandAllLayersByDefault:"Expand all layers by default",visibilityRange:"Visibility range",layerBatchOptions:"Enable layer batch options",changeSymbolForRuntimeLayers:"Change symbols for layers generated at runtime"},t.defaultMessages);class h extends e.React.PureComponent{constructor(i){super(i),this.supportedDsTypes=(0,e.Immutable)([e.AllDataSourceTypes.WebMap,e.AllDataSourceTypes.WebScene]),this.customizeLayersTrigger=(0,r.createRef)(),this.getPortUrl=()=>(0,e.getAppStore)().getState().portalUrl,this.shouldShowCustomizeLayerOptions=()=>{var e;return(null===(e=this.props.useMapWidgetIds)||void 0===e?void 0:e.length)>0},this.shouldShowLayerList=()=>!this.isDataSourceEmpty(),this.isCustomizeOptionEmpty=()=>this.isDataSourceEmpty()&&!this.shouldShowCustomizeWarning(),this.onRadioChange=e=>{this.props.onSettingChange({id:this.props.id,config:this.props.config.set("useMapWidget",e)}),this.setState({useMapWidget:e})},this.onOptionsChanged=(e,t)=>{this.props.onSettingChange({id:this.props.id,config:this.props.config.set(t,e)})},this.onToggleUseDataEnabled=e=>{this.props.onSettingChange({id:this.props.id,useDataSourcesEnabled:e})},this.onDataSourceChange=e=>{e&&this.props.onSettingChange({id:this.props.id,useDataSources:e})},this.onMapWidgetSelected=e=>{var t;const s=(null===(t=o.MapViewManager.getInstance().getJimuMapViewGroup(e[0]))||void 0===t?void 0:t.jimuMapViews)||{};this.setState({mapViews:s}),this.props.onSettingChange({id:this.props.id,useMapWidgetIds:e})},this.onViewsCreate=e=>{const t=Object.keys(e);this.setState({mapViews:e,viewIdsFromMapWidget:t})},this.onListItemBodyClick=e=>{var t;const s=`${null===(t=this.props.useMapWidgetIds)||void 0===t?void 0:t[0]}-${e}`;this.setState({activeCustomizeJmvId:s})},this.getActiveCustomizeStatus=()=>{var e,t,s;return(null===(s=null===(t=null===(e=this.props.config)||void 0===e?void 0:e.customizeLayerOptions)||void 0===t?void 0:t[this.state.activeCustomizeJmvId])||void 0===s?void 0:s.isEnabled)||!1},this.getShowRuntimeAddedLayerStatus=()=>{var e,t,s,i;return null===(i=null===(s=null===(t=null===(e=this.props.config)||void 0===e?void 0:e.customizeLayerOptions)||void 0===t?void 0:t[this.state.activeCustomizeJmvId])||void 0===s?void 0:s.showRuntimeAddedLayers)||void 0===i||i},this.getSelectedValues=()=>{var t,i;const a={},o=this.state.activeCustomizeJmvId;return o&&(null===(i=null===(t=this.props.config)||void 0===t?void 0:t.customizeLayerOptions)||void 0===i?void 0:i[o])&&this.props.config.customizeLayerOptions[o].isEnabled&&this.props.config.customizeLayerOptions[o].showJimuLayerViewIds?(a[o]=this.props.config.customizeLayerOptions[o].showJimuLayerViewIds,a):{[this.state.activeCustomizeJmvId]:(0,e.Immutable)((0,s.getAllItemsInMapView)(this.state.activeCustomizeJmvId,!0))}},this.onCustomizeLayerChange=(e,t)=>{this.props.onSettingChange({id:this.props.id,config:this.props.config.setIn(["customizeLayerOptions",this.state.activeCustomizeJmvId],{isEnabled:e,hiddenJimuLayerViewIds:[],showJimuLayerViewIds:e?[...t]:[]})})},this.onShowRuntimeAddedLayersChange=e=>{const t=this.props.config.setIn(["customizeLayerOptions",this.state.activeCustomizeJmvId,"showRuntimeAddedLayers"],e);this.props.onSettingChange({id:this.props.id,config:t})},this.onLayerIdChange=e=>{const t=this.props.config.setIn(["customizeLayerOptions",this.state.activeCustomizeJmvId,"showJimuLayerViewIds"],e);this.props.onSettingChange({id:this.props.id,config:t})},this.getCustomizeLayerList=()=>{var t;return(0,e.jsx)("div",{ref:this.customizeLayersTrigger,className:"w-100"},(0,e.jsx)(s.LayerSetting,{mapWidgetId:null===(t=this.props.useMapWidgetIds)||void 0===t?void 0:t[0],onMapItemClick:this.onListItemBodyClick,mapViewId:this.state.activeCustomizeJmvId,isCustomizeEnabled:this.getActiveCustomizeStatus(),isShowRuntimeAddedLayerEnabled:this.getShowRuntimeAddedLayerStatus(),showTable:!0,onToggleCustomize:this.onCustomizeLayerChange,onShowRuntimeAddedLayersChange:this.onShowRuntimeAddedLayersChange,onSelectedLayerIdChange:this.onLayerIdChange,selectedValues:this.getSelectedValues()}))},this.getCustomizeSettingContent=()=>{const i=(0,e.jsx)(t.Label,{id:"multiple-jimu-map-desc"},this.getTranslatedString("customizeDescription"));return this.shouldShowCustomizeLayerOptions()&&(0,e.jsx)(e.React.Fragment,null,(0,e.jsx)(s.SettingRow,{label:i,flow:"wrap","aria-label":this.getTranslatedString("customizeDescription"),className:this.isCustomizeOptionEmpty()?"empty-customize-layer-list":"customize-layer-list"},this.shouldShowCustomizeWarning()&&(0,e.jsx)(t.Alert,{tabIndex:0,className:"warningMsg",open:!0,text:this.getTranslatedString("customizeLayerWarnings"),type:"warning"}),this.shouldShowLayerList()&&this.getCustomizeLayerList()))},this.shouldShowCustomizeWarning=()=>!this.state.useMapWidget||this.isDataSourceEmpty(),this.isDataSourceEmpty=()=>{var e,t,s;const i=(null===(e=o.MapViewManager.getInstance().getJimuMapViewGroup(this.props.useMapWidgetIds[0]))||void 0===e?void 0:e.jimuMapViews)||{};return 1===Object.keys(i).length&&!(null===(s=null===(t=Object.values(i))||void 0===t?void 0:t[0])||void 0===s?void 0:s.dataSourceId)},this.state={mapViews:null,useMapWidget:this.props.config.useMapWidget||!1,viewIdsFromMapWidget:null,activeCustomizeJmvId:""}}setDefaultConfig(){var e;void 0===(null===(e=this.props.config)||void 0===e?void 0:e.showTables)&&this.props.onSettingChange({id:this.props.id,config:this.props.config.set("showTables",!0)})}getTranslatedString(e){return this.props.intl.formatMessage({id:e,defaultMessage:n[e]})}getFormattedMessage(t){return(0,e.jsx)(e.FormattedMessage,{id:t,defaultMessage:n[t]})}getSwitchOption(i,a){return(0,e.jsx)(e.React.Fragment,null,(0,e.jsx)(s.SettingRow,{tag:"label",label:this.getFormattedMessage(a||i)},(0,e.jsx)(t.Switch,{className:"can-x-switch",checked:this.props.config&&this.props.config[i]||!1,"data-key":i,onChange:e=>{this.onOptionsChanged(e.target.checked,i)}})))}render(){var r,n;const l=this.getPortUrl();let p=null,h=null,d=null,u=null,c=null;return h=(0,e.jsx)("div",{className:"data-selector-section"},(0,e.jsx)(s.SettingRow,null,(0,e.jsx)(i.DataSourceSelector,{types:this.supportedDsTypes,useDataSources:this.props.useDataSources,useDataSourcesEnabled:!0,mustUseDataSource:!0,onChange:this.onDataSourceChange,widgetId:this.props.id})),l&&this.props.dsJsons&&this.props.useDataSources&&1===this.props.useDataSources.length&&(0,e.jsx)(s.SettingRow,null,(0,e.jsx)("div",{className:"w-100"},(0,e.jsx)("div",{className:"webmap-thumbnail",title:null===(r=this.props.dsJsons[this.props.useDataSources[0].dataSourceId])||void 0===r?void 0:r.label},(0,e.jsx)(a,{mapItemId:this.props.dsJsons[this.props.useDataSources[0].dataSourceId]?this.props.dsJsons[this.props.useDataSources[0].dataSourceId].itemId:null,portUrl:this.props.dsJsons[this.props.useDataSources[0].dataSourceId]?this.props.dsJsons[this.props.useDataSources[0].dataSourceId].portalUrl:null}))))),d=(0,e.jsx)("div",{className:"map-selector-section"},(0,e.jsx)(s.SettingRow,null,(0,e.jsx)(s.MapWidgetSelector,{onSelect:this.onMapWidgetSelected,useMapWidgetIds:this.props.useMapWidgetIds})),(0,e.jsx)(o.JimuMapViewComponent,{useMapWidgetId:null===(n=this.props.useMapWidgetIds)||void 0===n?void 0:n[0],onViewsCreate:this.onViewsCreate}),this.getCustomizeSettingContent()),this.state.useMapWidget?(p=d,u=(0,e.jsx)(e.React.Fragment,null,this.getSwitchOption("goto"),this.getSwitchOption("label","showOrHideLabels"),this.getSwitchOption("popup"),this.getSwitchOption("opacity","transparency"),this.getSwitchOption("visibilityRange"),this.getSwitchOption("information"),this.getSwitchOption("changeSymbolForRuntimeLayers")),c=(0,e.jsx)(e.React.Fragment,null,this.getSwitchOption("useTickBoxes"),this.getSwitchOption("enableLegend"),this.props.config&&this.props.config.enableLegend&&(0,e.jsx)(s.SettingRow,null,(0,e.jsx)(t.Label,{"aria-label":this.getTranslatedString("showAllLegend"),className:"cursor-pointer"},(0,e.jsx)(t.Checkbox,{className:"mr-2",checked:this.props.config&&this.props.config.showAllLegend,onChange:e=>{this.onOptionsChanged(e.target.checked,"showAllLegend")}}),(0,e.jsx)("span",{className:"check-box-label"},` ${this.getTranslatedString("showAllLegend")}`))),this.getSwitchOption("reorderLayers"),this.getSwitchOption("searchLayers"),this.getSwitchOption("expandAllLayers","expandAllLayersByDefault"),this.getSwitchOption("layerBatchOptions"),this.getSwitchOption("showTables"))):(p=h,u=(0,e.jsx)(e.React.Fragment,null,this.getSwitchOption("information")),c=(0,e.jsx)(e.React.Fragment,null,this.getSwitchOption("expandAllLayers","expandAllLayersByDefault"),this.getSwitchOption("layerBatchOptions"),this.getSwitchOption("showTables"))),(0,e.jsx)("div",{css:(g=this.props.theme,e.css`
    .widget-setting-layerlist{
      .source-descript {
        color: ${g.ref.palette.neutral[1e3]};
      }

      .webmap-thumbnail{
        cursor: auto;
        width: 100%;
        height: 120px;
        overflow: hidden;
        padding: 1px;
        border: ${e.polished.rem(2)} solid initial;
        img, div{
          width: 100%;
          height: 100%;
        }
      }

      .warning-tooltip{
        .jimu-icon-component {
          color: ${g.sys.color.warning.main}
        }
      }

      .layerlist-tools{
        .layerlist-tools-item{
          display: flex;
          /* justify-content: space-between; */
          margin-bottom: 8px;
          align-items: center;
        }
      }

      .map-selector-section .component-map-selector .form-control{
        width: 100%;
      }

      .data-selector-section, .map-selector-section{
        padding-top: 10px;
      }

      .check-box-label {
        color: ${g.ref.palette.neutral[1e3]};
        font-weight: 400;
        line-height: ${e.polished.rem(18)};
      }

      .cursor-pointer {
        cursor: pointer;
      }

    }
  `)},(0,e.jsx)("div",{className:"widget-setting-layerlist"},(0,e.jsx)(s.SettingSection,{title:this.getTranslatedString("sourceLabel"),role:"group","aria-label":this.getTranslatedString("sourceLabel")},(0,e.jsx)(s.SettingRow,null,(0,e.jsx)("div",{className:"layerlist-tools w-100"},(0,e.jsx)("div",{className:"w-100"},(0,e.jsx)("div",{className:"layerlist-tools-item radio"},(0,e.jsx)(t.Radio,{id:"map-data",style:{cursor:"pointer"},name:"source-option",onChange:e=>{this.onRadioChange(!1)},checked:!this.state.useMapWidget}),(0,e.jsx)(t.Label,{style:{cursor:"pointer"},for:"map-data",className:"ml-1"},this.getTranslatedString("showLayerForMap")))),(0,e.jsx)("div",{className:"w-100"},(0,e.jsx)("div",{className:"layerlist-tools-item radio"},(0,e.jsx)(t.Radio,{id:"map-view",style:{cursor:"pointer"},name:"source-option",onChange:e=>{this.onRadioChange(!0)},checked:this.state.useMapWidget}),(0,e.jsx)(t.Label,{style:{cursor:"pointer"},for:"map-view",className:"ml-1"},this.getTranslatedString("interactWithMap")))))),p),(0,e.jsx)(s.SettingSection,{title:this.getTranslatedString("options"),role:"group","aria-label":this.getTranslatedString("options")},u,c)));var g}}h.mapExtraStateProps=e=>({dsJsons:e.appStateInBuilder.appConfig.dataSources});const d=h;function u(e){l.p=e}})(),p})())}}}));