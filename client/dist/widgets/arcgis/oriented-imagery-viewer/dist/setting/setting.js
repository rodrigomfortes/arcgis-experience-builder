System.register(["jimu-arcgis","jimu-core","jimu-ui","jimu-ui/advanced/setting-components","jimu-core/react"],(function(e,t){var a={},o={},n={},l={},i={};return{setters:[function(e){a.JimuMapViewComponent=e.JimuMapViewComponent},function(e){o.React=e.React},function(e){n.Switch=e.Switch},function(e){l.MapWidgetSelector=e.MapWidgetSelector,l.SettingRow=e.SettingRow,l.SettingSection=e.SettingSection},function(e){i.memo=e.memo,i.useRef=e.useRef,i.useState=e.useState}],execute:function(){e((()=>{var e={14321:e=>{"use strict";e.exports=n},62686:e=>{"use strict";e.exports=a},68972:e=>{"use strict";e.exports=i},79244:e=>{"use strict";e.exports=o},79298:e=>{"use strict";e.exports=l}},t={};function r(a){var o=t[a];if(void 0!==o)return o.exports;var n=t[a]={exports:{}};return e[a](n,n.exports,r),n.exports}r.d=(e,t)=>{for(var a in t)r.o(t,a)&&!r.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.p="";var c={};return r.p=window.jimuConfig.baseUrl,(()=>{"use strict";r.r(c),r.d(c,{__set_webpack_public_path__:()=>u,default:()=>s});var e=r(62686),t=r(79244),a=r(14321),o=r(79298),n=r(68972);const l=[{name:"viewerToolsEnabled",labelKey:"viewerToolsToggleLabel",subTools:[{name:"imageGalleryEnabled",labelKey:"imageGalleryToolToggleLabel"},{name:"imageEnahncementEnabled",labelKey:"imageEnhancementToolToggleLabel"},{name:"mapImageConversionToolEnabled",labelKey:"mapImageConversionToolToggleLabel"},{name:"showPopupsActionEnabled",labelKey:"showPopupsActionToggleLabel"},{name:"navigationToolEnabled",labelKey:"navigationToolToggleLabel"},{name:"directionalNavigationEnabled",labelKey:"directionalNavigationToggleLabel"},{name:"sequentialNavigationEnabled",labelKey:"sequentialNavigationToggleLabel"},{name:"measurementToolsEnabled",labelKey:"measurementToolsToggleLabel"},{name:"imageOverlaysEnabled",labelKey:"imageOverlaysToggleLabel",subTools:[{name:"dataCaptureEnabled",labelKey:"digitizationToggleLabel"}]}]}],i={mapWidgetSelectionSectionTitle:"Choose Map Widget",imageGalleryToolToggleLabel:"Image gallery tool",viewerToolsToggleLabel:"Viewer tools",imageEnhancementToolToggleLabel:"Image enhancement tool",mapImageConversionToolToggleLabel:"Map-image location tool",showPopupsActionToggleLabel:"Show pop-ups",navigationToolToggleLabel:"Navigation tool",noOiLayersError:"No Oriented Imagery Layer in the selected map.",noMapSelectedError:"No Map selected.",defaultError:"Failed to load settings.",configureToolsSectionTitle:"Configure Tools",measurementToolsToggleLabel:"Measurement tools",imageOverlaysToggleLabel:"Image overlays",digitizationToggleLabel:"Data capture",directionalNavigationToggleLabel:"Directional navigation",sequentialNavigationToggleLabel:"Sequential navigation"};var g=function(e,t,a,o){return new(a||(a=Promise))((function(n,l){function i(e){try{c(o.next(e))}catch(e){l(e)}}function r(e){try{c(o.throw(e))}catch(e){l(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(i,r)}c((o=o.apply(e,t||[])).next())}))};const s=(0,n.memo)((function(r){var c;const{config:s,id:u,intl:m}=r,[d,p]=(0,n.useState)(null),[v,b]=(0,n.useState)([]),T=(0,n.useRef)(null),y=e=>m?m.formatMessage({id:e,defaultMessage:i[e]}):e,f=e=>{var t,a;t=e.currentTarget.name,a=e.currentTarget.checked,r.onSettingChange({id:u,config:s.set(t,a)})},S=e=>e.watch((()=>{var t,a;return null===(a=null===(t=e.view.map)||void 0===t?void 0:t.allLayers)||void 0===a?void 0:a.filter((e=>"oriented-imagery"===e.type&&e.loaded)).length}),(()=>{b(h(e.view.map.allLayers))})),h=e=>e.reduce(((e,t)=>("oriented-imagery"===t.type?e.push(t):"group"===t.type&&e.push(...h(t.layers)),e)),[]),w=e=>t.React.createElement(t.React.Fragment,null,e.map((e=>{var n;const l=y(e.labelKey),i=(null===(n=e.subTools)||void 0===n?void 0:n.length)&&s[e.name];return t.React.createElement(t.React.Fragment,null,t.React.createElement(o.SettingRow,{role:"group","aria-label":l,tag:"label",label:l,key:e.name},t.React.createElement(a.Switch,{name:e.name,checked:s[e.name],onChange:f})),i?w(e.subTools):null)})));return t.React.createElement("div",{className:"widget-setting-demo"},t.React.createElement(e.JimuMapViewComponent,{useMapWidgetId:null===(c=r.useMapWidgetIds)||void 0===c?void 0:c[0],onActiveViewChange:e=>g(this,void 0,void 0,(function*(){var t;T.current&&(T.current.remove(),T.current=null),e?(p(e.view),b(h(null===(t=e.view.map)||void 0===t?void 0:t.allLayers)),T.current=yield S(e)):(p(null),b([]))}))}),t.React.createElement(o.SettingSection,{className:"map-selector-section",title:y("mapWidgetSelectionSectionTitle")},t.React.createElement(o.SettingRow,null,t.React.createElement(o.MapWidgetSelector,{onSelect:e=>{r.onSettingChange({id:u,useMapWidgetIds:e})},useMapWidgetIds:r.useMapWidgetIds}))),d&&(null==v?void 0:v.length)?t.React.createElement(o.SettingSection,{title:y("configureToolsSectionTitle")},w(l)):(()=>{let e=y("defaultError");return d?(null==v?void 0:v.length)||(e=y("noOiLayersError")):e=y("noMapSelectedError"),t.React.createElement(o.SettingSection,{className:"d-flex justify-content-center",style:{color:r.theme.ref.palette.neutral[900]}},t.React.createElement("div",{className:"text-center"},e))})())}));function u(e){r.p=e}})(),c})())}}}));