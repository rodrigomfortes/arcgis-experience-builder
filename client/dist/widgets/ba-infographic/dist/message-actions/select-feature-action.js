System.register(["jimu-core"],(function(e,t){var i={};return{setters:[function(e){i.AbstractMessageAction=e.AbstractMessageAction,i.MessageType=e.MessageType,i.MutableStoreManager=e.MutableStoreManager,i.dataSourceUtils=e.dataSourceUtils,i.loadArcGISJSAPIModule=e.loadArcGISJSAPIModule}],execute:function(){e((()=>{var e={9244:e=>{"use strict";e.exports=i}},t={};function o(i){var l=t[i];if(void 0!==l)return l.exports;var r=t[i]={exports:{}};return e[i](r,r.exports,o),r.exports}o.d=(e,t)=>{for(var i in t)o.o(t,i)&&!o.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.p="";var l={};return o.p=window.jimuConfig.baseUrl,(()=>{"use strict";o.r(l),o.d(l,{default:()=>t});var e=o(9244);class t extends e.AbstractMessageAction{constructor(){super(...arguments),this.getLayerDisplayField=e=>{var t,i,o,l,r,a,n,s;return(null===(t=null==e?void 0:e.layer)||void 0===t?void 0:t.displayField)||(null===(i=null==e?void 0:e.layerDefinition)||void 0===i?void 0:i.displayField)||(null===(l=null===(o=null==e?void 0:e.belongToDataSource)||void 0===o?void 0:o.layerDefinition)||void 0===l?void 0:l.displayField)||(null===(r=null==e?void 0:e.layer)||void 0===r?void 0:r.objectIdField)||(null===(a=null==e?void 0:e.layerDefinition)||void 0===a?void 0:a.objectIdField)||(null===(s=null===(n=null==e?void 0:e.belongToDataSource)||void 0===n?void 0:n.layerDefinition)||void 0===s?void 0:s.objectIdField)||"OBJECTID"}}filterMessageDescription(t){return t.messageType===e.MessageType.DataRecordsSelectionChange}filterMessage(e){return!0}onExecute(t){if(t.type===e.MessageType.DataRecordsSelectionChange){const i=t,o=i.records&&i.records[0];if(o){const t=o.feature;e.dataSourceUtils.changeToJSAPIGraphic(t).then((t=>{(0,e.loadArcGISJSAPIModule)("esri/symbols/support/symbolUtils").then((i=>{i.getDisplayedSymbol(t).then((i=>{var o,l;if(t&&"polygon"===(null===(o=t.geometry)||void 0===o?void 0:o.type)){const o=t.geometry,l={type:"polygon",rings:o.rings,spatial:o.spatialReference,attributes:t.attributes?t.attributes:{},displayName:t.attributes[this.getLayerDisplayField(t)],symbol:i.toJSON()};e.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"workflowRuntimeSelectedFeatureObject",l)}else if(t&&"point"===(null===(l=t.geometry)||void 0===l?void 0:l.type)){const i=t.geometry;if(null!==i.latitude&&null!==i.latitude||null!==i.x&&null!==i.y){const o={latitude:i.latitude,longitude:i.longitude,geometry:i,type:"point",spatial:i.spatialReference,attributes:t.attributes?t.attributes:{},displayName:t.attributes[this.getLayerDisplayField(t)].toString()};e.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"workflowRuntimeSelectedFeatureObject",o)}}}))}))}))}}return Promise.resolve(!0)}}})(),l})())}}}));