/** @jsx jsx */
import { React, type ImmutableArray, type UseDataSource, type Expression, type AdvancedExpression, type IMDynamicStyleTypes, type IMDynamicStyleConfig } from 'jimu-core';
import { type ComponentExtraProps } from '../../utils';
export interface DynamicStyleBuilderProps {
    /**
     * Id of widget.
     * Use widget id to get widget context, e.g. whether widget is in a repeated data source context.
     */
    widgetId: string;
    /**
     * Widget's `useDataSources`, which means data sources that widget is using.
     * Will use these data sources to build dynamic styles.
     */
    useDataSources: ImmutableArray<UseDataSource>;
    /**
     * @ignore
     * Used to indicate whether the widget supports dynamic content. If true, the expressions used in the widget can be used as the indicator for conditions.
     * If the value is 'none', it means that the widget does not support dynamic content, such as the List widget.
     * If the value is 'single', it means that the widget supports at most one dynamic content, such as the Button widget.
     * If the value is 'multiple', it means that the widget supports at most multiple dynamic contents, such as the Text widget.
     */
    widgetDynamicContentCapability: 'none' | 'single' | 'multiple';
    /**
     * @ignore
     */
    hideConditionIndicatorCustomAttributeDsViewSelector?: boolean;
    /**
     * @ignore
     */
    hideConditionIndicatorCustomStatistics?: boolean;
    /**
     * @ignore
     */
    configuredExpressionsLabel?: string;
    /**
     * These expressions can be used as indicator expression or condition expressions.
     */
    expressions: Array<Expression | AdvancedExpression> | ImmutableArray<Expression | AdvancedExpression>;
    /**
     * Used to set the style types to be built for condition style builder.
     */
    conditionStyleTypes: IMDynamicStyleTypes;
    /**
     * Used to set the style types to be built for Arcade style builder.
     */
    arcacdeStyleTypes: IMDynamicStyleTypes;
    /**
     * Indicates whether to use icons in `ArcadeContentBuilder`.
     */
    useIconsForArcade: boolean;
    /**
     * Configuration information generated by the component.
     */
    config: IMDynamicStyleConfig;
    /**
     * This callback function is called when the configuration information changes.
     * @param config
     */
    onChange?: (config: IMDynamicStyleConfig) => void;
}
type FinalDynamicStyleBuilderProps = DynamicStyleBuilderProps & ComponentExtraProps;
/**
 * The component is used to build dynamic style.
 *
 * ```ts
 * import { DynamicStyleBuilder } from 'jimu-ui/advanced/dynamic-style-builder'
 * ```
 */
export declare const DynamicStyleBuilder: React.ForwardRefExoticComponent<Pick<Omit<FinalDynamicStyleBuilderProps, "intl"> & {
    forwardedRef?: React.Ref<any>;
}, "className" | "forwardedRef" | keyof DynamicStyleBuilderProps> & {
    theme?: import("jimu-core").IMThemeVariables;
}>;
export {};
