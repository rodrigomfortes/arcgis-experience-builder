/** @jsx jsx */
import { React, type ImmutableArray, type UseDataSource, type IMArcadeContentConfig, ArcadeContentCapability, type IMDynamicStyleTypes } from 'jimu-core';
import { type ComponentExtraProps } from '../utils';
export interface ArcadeContentBuilderProps {
    /**
     * Arcade content includes value and styles.
     * If `capabilities` includes `ArcadeContentCapability.Value`, it means that the component can builds value.
     * If `capabilities` includes `ArcadeContentCapability.Style`, it means that the component can builds styles.
     * If `capabilities` is null, undefined or an empty array, then it use default value [ArcadeContentCapability.Value, ArcadeContentCapability.Style].
     */
    capabilities: ArcadeContentCapability[];
    /**
     * Indicates whether to display the title.
     */
    useTitle: boolean;
    /**
     * Indicates whether to use icons if `capabilities` includes `ArcadeContentCapability.Style`.
     */
    useIcons: boolean;
    /**
     * The id of the widget that uses this component.
     */
    widgetId: string;
    /**
     * Widget's `useDataSources`, the data sources that the widget is using.
     */
    useDataSources: ImmutableArray<UseDataSource>;
    /**
     * Used to set the style types to be built.
     */
    dynamicStyleTypes: IMDynamicStyleTypes;
    /**
     * @ignore
     */
    modalOnly?: boolean;
    /**
     * @ignore
     */
    insertMode?: boolean;
    /**
     * @ignore
     */
    onModalClose?: () => void;
    /**
     * Configuration information generated by the component.
     */
    config?: IMArcadeContentConfig;
    /**
     * This callback function is called when the configuration information changes.
     * @param config
     */
    onChange?: (config: IMArcadeContentConfig) => void;
    className?: string;
}
type FinalArcadeContentBuilderProps = ArcadeContentBuilderProps & ComponentExtraProps;
/**
 * The component is used to build Arcade content. Arcade content includes value and styles.
 *
 * ```ts
 * import { ArcadeContentBuilder } from 'jimu-ui/advanced/arcade-content-builder'
 * ```
 */
export declare const ArcadeContentBuilder: React.ForwardRefExoticComponent<Pick<Omit<FinalArcadeContentBuilderProps, "intl"> & {
    forwardedRef?: React.Ref<any>;
}, "config" | "widgetId" | "useDataSources" | "capabilities" | "onChange" | "className" | "repeatedDataSource" | "forwardedRef" | "useTitle" | "useIcons" | "dynamicStyleTypes" | "modalOnly" | "insertMode" | "onModalClose"> & {
    theme?: import("jimu-core").IMThemeVariables;
}>;
export {};
